"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5245],{93967:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>x,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var s=t(74848),i=t(28453);const r={},o=void 0,d={id:"API-Reference/utils/ExtensionLoader",title:"ExtensionLoader",description:"Import :",source:"@site/api/API-Reference/utils/ExtensionLoader.md",sourceDirName:"API-Reference/utils",slug:"/API-Reference/utils/ExtensionLoader",permalink:"/api/API-Reference/utils/ExtensionLoader",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ExtensionInterface",permalink:"/api/API-Reference/utils/ExtensionInterface"},next:{title:"ExtensionUtils",permalink:"/api/API-Reference/utils/ExtensionUtils"}},l={},c=[{value:"Import :",id:"import-",level:3},{value:"contexts : <code>Object.&lt;string, Object&gt;</code>",id:"contexts--objectstring-object",level:2},{value:"DEFAULT_EXTENSIONS_PATH_BASE",id:"default_extensions_path_base",level:2},{value:"_getExtensionPath()",id:"_getextensionpath",level:2},{value:"getDevExtensionPath()",id:"getdevextensionpath",level:2},{value:"getUserExtensionPath()",id:"getuserextensionpath",level:2},{value:"getRequireContextForExtension(name,) \u21d2 <code>Object</code>",id:"getrequirecontextforextensionname--object",level:2},{value:"loadExtensionModule(name,, config, entryPoint, metadata) \u21d2 <code>$.Promise</code>",id:"loadextensionmodulename-config-entrypoint-metadata--promise",level:2},{value:"loadExtension(name,, config, entryPoint,) \u21d2 <code>$.Promise</code>",id:"loadextensionname-config-entrypoint--promise",level:2},{value:"_testExtensionByURL(name,, config, entryPoint,) \u21d2 <code>$.Promise</code>",id:"_testextensionbyurlname-config-entrypoint--promise",level:2},{value:"testExtension(name,, config, entryPoint,) \u21d2 <code>$.Promise</code>",id:"testextensionname-config-entrypoint--promise",level:2},{value:"loadAllDefaultExtensions() \u21d2 <code>$.Promise</code>",id:"loadalldefaultextensions--promise",level:2},{value:"loadAllExtensionsInNativeDirectory(directory,) \u21d2 <code>$.Promise</code>",id:"loadallextensionsinnativedirectorydirectory--promise",level:2},{value:"loadExtensionFromNativeDirectory(directory) \u21d2 <code>Promise</code>",id:"loadextensionfromnativedirectorydirectory--promise",level:2},{value:"testAllExtensionsInNativeDirectory(directory,) \u21d2 <code>$.Promise</code>",id:"testallextensionsinnativedirectorydirectory--promise",level:2},{value:"testAllDefaultExtensions() \u21d2 <code>$.Promise</code>",id:"testalldefaultextensions--promise",level:2},{value:"init(A) \u21d2 <code>$.Promise</code>",id:"inita--promise",level:2}];function a(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const ExtensionLoader = brackets.getModule("utils/ExtensionLoader")\n'})}),"\n",(0,s.jsx)("a",{name:"contexts"}),"\n",(0,s.jsxs)(n.h2,{id:"contexts--objectstring-object",children:["contexts : ",(0,s.jsx)("code",{children:"Object.<string, Object>"})]}),"\n",(0,s.jsx)(n.p,{children:"Stores require.js contexts of extensions"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"DEFAULT_EXTENSIONS_PATH_BASE"}),"\n",(0,s.jsx)(n.h2,{id:"default_extensions_path_base",children:"DEFAULT_EXTENSIONS_PATH_BASE"}),"\n",(0,s.jsx)(n.p,{children:"Returns the path to the default extensions directory relative to Phoenix base URL"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global constant"]}),"\n",(0,s.jsx)("a",{name:"_getExtensionPath"}),"\n",(0,s.jsx)(n.h2,{id:"_getextensionpath",children:"_getExtensionPath()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the full path to the development extensions directory."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"getDevExtensionPath"}),"\n",(0,s.jsx)(n.h2,{id:"getdevextensionpath",children:"getDevExtensionPath()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the full path to the development extensions directory."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"getUserExtensionPath"}),"\n",(0,s.jsx)(n.h2,{id:"getuserextensionpath",children:"getUserExtensionPath()"}),"\n",(0,s.jsx)(n.p,{children:'Returns the full path of the default user extensions directory. This is in the users\rapplication support directory, which is typically\r/Users/"user"/Application Support/Brackets/extensions/user on the mac, and\rC:\\Users"user"\\AppData\\Roaming\\Brackets\\extensions\\user on windows.'}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"getRequireContextForExtension"}),"\n",(0,s.jsxs)(n.h2,{id:"getrequirecontextforextensionname--object",children:["getRequireContextForExtension(name,) \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns the require.js require context used to load an extension"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Object"})," - A require.js require object used to load the extension, or undefined if\rthere is no require object with that name"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"used to identify the extension"})]})})]}),"\n",(0,s.jsx)("a",{name:"loadExtensionModule"}),"\n",(0,s.jsxs)(n.h2,{id:"loadextensionmodulename-config-entrypoint-metadata--promise",children:["loadExtensionModule(name,, config, entryPoint, metadata) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Loads the extension module that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when the extension is loaded, or rejected\rif the extension fails to load or throws an exception immediately when loaded.\r(Note: if extension contains a JS syntax error, promise is resolved not rejected)."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"used to identify the extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"config"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(n.td,{children:"object with baseUrl property containing absolute path of extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"entryPoint"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"name of the main js file to load"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"metadata"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)("a",{name:"loadExtension"}),"\n",(0,s.jsxs)(n.h2,{id:"loadextensionname-config-entrypoint--promise",children:["loadExtension(name,, config, entryPoint,) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Loads the extension that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when the extension is loaded, or rejected\rif the extension fails to load or throws an exception immediately when loaded.\r(Note: if extension contains a JS syntax error, promise is resolved not rejected)."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"used to identify the extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"config"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(n.td,{children:"object with baseUrl property containing absolute path of extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"entryPoint,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"name of the main js file to load"})]})]})]}),"\n",(0,s.jsx)("a",{name:"_testExtensionByURL"}),"\n",(0,s.jsxs)(n.h2,{id:"_testextensionbyurlname-config-entrypoint--promise",children:["_testExtensionByURL(name,, config, entryPoint,) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Runs unit tests for the extension that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"used to identify the extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"config"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(n.td,{children:"object with baseUrl property containing absolute path of extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"entryPoint,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"name of the main js file to load"})]})]})]}),"\n",(0,s.jsx)("a",{name:"testExtension"}),"\n",(0,s.jsxs)(n.h2,{id:"testextensionname-config-entrypoint--promise",children:["testExtension(name,, config, entryPoint,) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Runs unit tests for the extension that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"used to identify the extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"config"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(n.td,{children:"object with baseUrl property containing absolute path of extension"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"entryPoint,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"name of the main js file to load"})]})]})]}),"\n",(0,s.jsx)("a",{name:"loadAllDefaultExtensions"}),"\n",(0,s.jsxs)(n.h2,{id:"loadalldefaultextensions--promise",children:["loadAllDefaultExtensions() \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Loads All brackets default extensions from brackets base https URL."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsx)("a",{name:"loadAllExtensionsInNativeDirectory"}),"\n",(0,s.jsxs)(n.h2,{id:"loadallextensionsinnativedirectorydirectory--promise",children:["loadAllExtensionsInNativeDirectory(directory,) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Loads the extension that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"directory,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"an absolute native path that contains a directory of extensions.                  each subdirectory is interpreted as an independent extension"})]})})]}),"\n",(0,s.jsx)("a",{name:"loadExtensionFromNativeDirectory"}),"\n",(0,s.jsxs)(n.h2,{id:"loadextensionfromnativedirectorydirectory--promise",children:["loadExtensionFromNativeDirectory(directory) \u21d2 ",(0,s.jsx)("code",{children:"Promise"})]}),"\n",(0,s.jsxs)(n.p,{children:["Loads a given extension at the path from virtual fs. Used by ",(0,s.jsx)(n.code,{children:"debug menu> load project as extension"})]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.th,{children:"Param"})})}),(0,s.jsx)(n.tbody,{children:(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.td,{children:"directory"})})})]}),"\n",(0,s.jsx)("a",{name:"testAllExtensionsInNativeDirectory"}),"\n",(0,s.jsxs)(n.h2,{id:"testallextensionsinnativedirectorydirectory--promise",children:["testAllExtensionsInNativeDirectory(directory,) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Runs unit test for the extension that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"directory,"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"an absolute native path that contains a directory of extensions.                  each subdirectory is interpreted as an independent extension"})]})})]}),"\n",(0,s.jsx)("a",{name:"testAllDefaultExtensions"}),"\n",(0,s.jsxs)(n.h2,{id:"testalldefaultextensions--promise",children:["testAllDefaultExtensions() \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Runs unit test for the extension that lives at baseUrl into its own Require.js context"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsx)("a",{name:"init"}),"\n",(0,s.jsxs)(n.h2,{id:"inita--promise",children:["init(A) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Load extensions."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that is resolved when all extensions complete loading."]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"A"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(n.td,{children:"list containing references to extension source      location. A source location may be either (a) a folder name inside      src/extensions or (b) an absolute path."})]})})]})]})}function x(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var s=t(96540);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);