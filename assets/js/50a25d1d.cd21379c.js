"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2693],{36019:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=n(74848),i=n(28453);const o={},a=void 0,s={id:"API-Reference/features/NewFileContentManager",title:"NewFileContentManager",description:"Import :",source:"@site/api/API-Reference/features/NewFileContentManager.md",sourceDirName:"API-Reference/features",slug:"/API-Reference/features/NewFileContentManager",permalink:"/api/API-Reference/features/NewFileContentManager",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BeautificationManager",permalink:"/api/API-Reference/features/BeautificationManager"},next:{title:"QuickViewManager",permalink:"/api/API-Reference/features/QuickViewManager"}},l={},d=[{value:"Import :",id:"import-",level:3},{value:"features/NewFileContentManager",id:"featuresnewfilecontentmanager",level:2},{value:"Usage",id:"usage",level:2},{value:"API",id:"api",level:2},{value:"registerContentProvider",id:"registercontentprovider",level:3},{value:"removeContentProvider",id:"removecontentprovider",level:3},{value:"provider.getContent",id:"providergetcontent",level:3},{value:"parameters",id:"parameters",level:4},{value:"return types",id:"return-types",level:4},{value:"features/NewFileContentManager.getInitialContentForFile(fullPath) \u21d2 <code>Promise.&lt;string&gt;</code>",id:"featuresnewfilecontentmanagergetinitialcontentforfilefullpath--promisestring",level:3}];function c(e){const t={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"import-",children:"Import :"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'const NewFileContentManager = brackets.getModule("features/NewFileContentManager")\n'})}),"\n",(0,r.jsx)("a",{name:"module_features/NewFileContentManager"}),"\n",(0,r.jsx)(t.h2,{id:"featuresnewfilecontentmanager",children:"features/NewFileContentManager"}),"\n",(0,r.jsxs)(t.p,{children:["NewFileContentManager provides support to add default template content when a new/empty file is created.\rExtensions can register to provide content with ",(0,r.jsx)(t.code,{children:"NewFileContentManager.registerContentProvider"})," API."]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.p,{children:'Let\'s say whenever a user creates a new js file, we have to prefill the contents to "sample content"'}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Example"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'const NewFileContentManager = brackets.getModule("features/NewFileContentManager");\r// replace `js` with language ID(Eg. javascript) if you want to restrict the preview to js files only. use `all` for\r// all languages.\rNewFileContentManager.registerContentProvider(exports, ["js"], 1);\r\r// provide a helpful name for the ContentProvider. This will be useful if you have to debug.\rexports.CONTENT_PROVIDER_NAME = "extension.someName";\r// now implement the getContent function that will be invoked when ever user creates a new empty file.\rexports.getContent = function(fullPath) {\r        return new Promise((resolve, reject)=>{\r            resolve("sample content");\r        });\r    };\n'})}),"\n",(0,r.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(t.h3,{id:"registercontentprovider",children:"registerContentProvider"}),"\n",(0,r.jsxs)(t.p,{children:["Register a Content provider with this api.\n",(0,r.jsx)(t.strong,{children:"Example"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"// syntax\rNewFileContentManager.registerContentProvider(provider, supportedLanguages, priority);\n"})}),"\n",(0,r.jsx)(t.p,{children:"The API requires three parameters:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"provider"}),": must implement a  ",(0,r.jsx)(t.code,{children:"getContent"})," function which will be invoked to get the content. See API doc below."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"supportedLanguages"}),": An array of languages that the provider supports. If ",(0,r.jsx)(t.code,{children:'["all"]'})," is supplied, then the\rprovider will be invoked for all languages. Restrict to specific languages: Eg: ",(0,r.jsx)(t.code,{children:'["javascript", "html", "php"]'})]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"priority"}),": Contents provided hy providers with higher priority will win if there are more than\rone provider registered for the language. Default is 0.\n",(0,r.jsx)(t.strong,{children:"Example"})]}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'// to register a provider that will be invoked for all languages. where provider is any object that implements\r// a getContent function\rNewFileContentManager.registerContentProvider(provider, ["all"]);\r\r// to register a provider that will be invoked for specific languages\rNewFileContentManager.registerContentProvider(provider, ["javascript", "html", "php"]);\n'})}),"\n",(0,r.jsx)(t.h3,{id:"removecontentprovider",children:"removeContentProvider"}),"\n",(0,r.jsxs)(t.p,{children:["Removes a registered content provider. The API takes the same arguments as ",(0,r.jsx)(t.code,{children:"registerContentProvider"}),".\n",(0,r.jsx)(t.strong,{children:"Example"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'// syntax\rNewFileContentManager.removeContentProvider(provider, supportedLanguages);\r// Example\rNewFileContentManager.removeContentProvider(provider, ["javascript", "html"]);\n'})}),"\n",(0,r.jsx)(t.h3,{id:"providergetcontent",children:"provider.getContent"}),"\n",(0,r.jsxs)(t.p,{children:["Each provider must implement the ",(0,r.jsx)(t.code,{children:"getContent"})," function that returns a promise. The promise either resolves with\rthe content text or rejects if there is no content made available by the provider.\n",(0,r.jsx)(t.strong,{children:"Example"})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'exports.CONTENT_PROVIDER_NAME = "extension.someName"; // for debugging\r// function signature\rexports.getContent = function(fullPath) {\r        return new Promise((resolve, reject)=>{\r            resolve("sample content");\r        });\r    };\n'})}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"parameters"}),"\n",(0,r.jsx)(t.p,{children:"The function will be called with the path of the file that needs the content."}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"fullPath"})," - string path"]}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"return-types",children:"return types"}),"\n",(0,r.jsx)(t.p,{children:"A promise that resolves with the content text or rejects if there is no content made available by the provider."}),"\n",(0,r.jsx)("a",{name:"module_features/NewFileContentManager..getInitialContentForFile"}),"\n",(0,r.jsxs)(t.h3,{id:"featuresnewfilecontentmanagergetinitialcontentforfilefullpath--promisestring",children:["features/NewFileContentManager.getInitialContentForFile(fullPath) \u21d2 ",(0,r.jsx)("code",{children:"Promise.<string>"})]}),"\n",(0,r.jsx)(t.p,{children:'Returns a promise that resolves to the default text content of the given file after querying\rall the content providers. If no text is returned by any providers, it will return an empty string "".\rTo get the default content given a path\rNewFileContentManager.getInitialContentForFile("/path/to/file.jsx");'}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Kind"}),": inner method of ",(0,r.jsx)(t.a,{href:"#module_features/NewFileContentManager",children:(0,r.jsx)("code",{children:"features/NewFileContentManager"})}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.strong,{children:"Returns"}),": ",(0,r.jsx)("code",{children:"Promise.<string>"})," - The text contents"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"fullPath"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"string"})})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var r=n(96540);const i={},o=r.createContext(i);function a(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);