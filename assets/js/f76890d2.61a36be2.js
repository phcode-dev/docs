"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5321],{75084:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>a,frontMatter:()=>d,metadata:()=>c,toc:()=>l});var i=t(74848),s=t(28453);const d={},r=void 0,c={id:"API-Reference/document/Document",title:"Document",description:"Import :",source:"@site/api/API-Reference/document/Document.md",sourceDirName:"API-Reference/document",slug:"/API-Reference/document/",permalink:"/api/API-Reference/document/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Menus",permalink:"/api/API-Reference/command/Menus"},next:{title:"DocumentManager",permalink:"/api/API-Reference/document/DocumentManager"}},o={},l=[{value:"Import :",id:"import-",level:3},{value:"Document",id:"document",level:2},{value:"new Document(file, initialTimestamp, rawText)",id:"new-documentfile-initialtimestamp-rawtext",level:3},{value:"document.file : <code>File</code>",id:"documentfile--file",level:3},{value:"document.language : <code>Language</code>",id:"documentlanguage--language",level:3},{value:"document.isDirty : <code>boolean</code>",id:"documentisdirty--boolean",level:3},{value:"document.isSaving : <code>boolean</code>",id:"documentissaving--boolean",level:3},{value:"document.diskTimestamp : <code>Date</code>",id:"documentdisktimestamp--date",level:3},{value:"document.lastChangeTimestamp : <code>number</code>",id:"documentlastchangetimestamp--number",level:3},{value:"document.keepChangesTime : <code>Number</code>",id:"documentkeepchangestime--number",level:3},{value:"document.addRef()",id:"documentaddref",level:3},{value:"document.releaseRef()",id:"documentreleaseref",level:3},{value:"document.getText([useOriginalLineEndings]) \u21d2 <code>string</code>",id:"documentgettextuseoriginallineendings--string",level:3},{value:"document.getSelectedText([useOriginalLineEndings], [allSelections]) \u21d2 <code>string</code> | <code>null</code>",id:"documentgetselectedtextuseoriginallineendings-allselections--string--null",level:3},{value:"document.setText(text)",id:"documentsettexttext",level:3},{value:"document.refreshText(text, newTimestamp, initial)",id:"documentrefreshtexttext-newtimestamp-initial",level:3},{value:"document.replaceRange(text, start, end, origin)",id:"documentreplacerangetext-start-end-origin",level:3},{value:"document.getRange(start, end) \u21d2 <code>string</code>",id:"documentgetrangestart-end--string",level:3},{value:"document.getLine(Zero-based) \u21d2 <code>string</code>",id:"documentgetlinezero-based--string",level:3},{value:"document.batchOperation(doOperation)",id:"documentbatchoperationdooperation",level:3},{value:"document.notifySaved()",id:"documentnotifysaved",level:3},{value:"document.adjustPosForChange(pos, textLines, start, end) \u21d2 <code>Object</code>",id:"documentadjustposforchangepos-textlines-start-end--object",level:3},{value:"document.doMultipleEdits(edits, origin) \u21d2 <code>Object</code>",id:"documentdomultipleeditsedits-origin--object",level:3},{value:"document.getLanguage() \u21d2 <code>Language</code>",id:"documentgetlanguage--language",level:3},{value:"document.isUntitled() \u21d2 <code>boolean</code>",id:"documentisuntitled--boolean",level:3},{value:"document.reload() \u21d2 <code>promise</code>",id:"documentreload--promise",level:3},{value:"Document.normalizeText()",id:"documentnormalizetext",level:3}];function h(e){const n={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const Document = brackets.getModule("document/Document")\n'})}),"\n",(0,i.jsx)("a",{name:"Document"}),"\n",(0,i.jsx)(n.h2,{id:"document",children:"Document"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global class"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document",children:"Document"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#new_Document_new",children:"new Document(file, initialTimestamp, rawText)"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"instance"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+file",children:".file"})," : ",(0,i.jsx)("code",{children:"File"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+language",children:".language"})," : ",(0,i.jsx)("code",{children:"Language"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+isDirty",children:".isDirty"})," : ",(0,i.jsx)("code",{children:"boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+isSaving",children:".isSaving"})," : ",(0,i.jsx)("code",{children:"boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+diskTimestamp",children:".diskTimestamp"})," : ",(0,i.jsx)("code",{children:"Date"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+lastChangeTimestamp",children:".lastChangeTimestamp"})," : ",(0,i.jsx)("code",{children:"number"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+keepChangesTime",children:".keepChangesTime"})," : ",(0,i.jsx)("code",{children:"Number"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+addRef",children:".addRef()"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+releaseRef",children:".releaseRef()"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+getText",children:".getText([useOriginalLineEndings])"})," \u21d2 ",(0,i.jsx)("code",{children:"string"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+getSelectedText",children:".getSelectedText([useOriginalLineEndings], [allSelections])"})," \u21d2 ",(0,i.jsx)("code",{children:"string"})," | ",(0,i.jsx)("code",{children:"null"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+setText",children:".setText(text)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+refreshText",children:".refreshText(text, newTimestamp, initial)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+replaceRange",children:".replaceRange(text, start, end, origin)"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+getRange",children:".getRange(start, end)"})," \u21d2 ",(0,i.jsx)("code",{children:"string"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+getLine",children:".getLine(Zero-based)"})," \u21d2 ",(0,i.jsx)("code",{children:"string"})]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+batchOperation",children:".batchOperation(doOperation)"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document+notifySaved",children:".notifySaved()"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+adjustPosForChange",children:".adjustPosForChange(pos, textLines, start, end)"})," \u21d2 ",(0,i.jsx)("code",{children:"Object"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+doMultipleEdits",children:".doMultipleEdits(edits, origin)"})," \u21d2 ",(0,i.jsx)("code",{children:"Object"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+getLanguage",children:".getLanguage()"})," \u21d2 ",(0,i.jsx)("code",{children:"Language"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+isUntitled",children:".isUntitled()"})," \u21d2 ",(0,i.jsx)("code",{children:"boolean"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Document+reload",children:".reload()"})," \u21d2 ",(0,i.jsx)("code",{children:"promise"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"static"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Document.normalizeText",children:".normalizeText()"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)("a",{name:"new_Document_new"}),"\n",(0,i.jsx)(n.h3,{id:"new-documentfile-initialtimestamp-rawtext",children:"new Document(file, initialTimestamp, rawText)"}),"\n",(0,i.jsx)(n.p,{children:"Model for the contents of a single file and its current modification state.\nSee DocumentManager documentation for important usage notes."}),"\n",(0,i.jsx)(n.p,{children:"Document dispatches these events:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"change"})," -- When the text of the editor changes (including due to undo/redo)."]}),"\n",(0,i.jsxs)(n.p,{children:["Passes (","Document",", ","ChangeList","), where ChangeList is an array\nof change record objects. Each change record looks like:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"    { from: start of change, expressed as {line: <line number>, ch: <character offset>},\n      to: end of change, expressed as {line: <line number>, ch: <chracter offset>},\n      text: array of lines of text to replace existing text }\n"})}),"\n",(0,i.jsx)(n.p,{children:"The line and ch offsets are both 0-based."}),"\n",(0,i.jsx)(n.p,{children:'The ch offset in "from" is inclusive, but the ch offset in "to" is exclusive. For example,\nan insertion of new content (without replacing existing content) is expressed by a range\nwhere from and to are the same.'}),"\n",(0,i.jsx)(n.p,{children:'If "from" and "to" are undefined, then this is a replacement of the entire text content.'}),"\n",(0,i.jsx)(n.p,{children:'IMPORTANT: If you listen for the "change" event, you MUST also addRef() the document\n(and releaseRef() it whenever you stop listening). You should also listen to the "deleted"\nevent.'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"deleted"}),' -- When the file for this document has been deleted. All views onto the document should\nbe closed. The document will no longer be editable or dispatch "change" events.']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"languageChanged"})," -- When the value of getLanguage() has changed. 2nd argument is the old value,\n3rd argument is the new value."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"file"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"File"})}),(0,i.jsx)(n.td,{children:"Need not lie within the project."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"initialTimestamp"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Date"})}),(0,i.jsx)(n.td,{children:"File's timestamp when we read it off disk."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"rawText"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"string"})}),(0,i.jsx)(n.td,{children:"Text content of the file."})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+file"}),"\n",(0,i.jsxs)(n.h3,{id:"documentfile--file",children:["document.file : ",(0,i.jsx)("code",{children:"File"})]}),"\n",(0,i.jsx)(n.p,{children:"The File for this document. Need not lie within the project.\nIf Document is untitled, this is an InMemoryFile object."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+language"}),"\n",(0,i.jsxs)(n.h3,{id:"documentlanguage--language",children:["document.language : ",(0,i.jsx)("code",{children:"Language"})]}),"\n",(0,i.jsx)(n.p,{children:"The Language for this document. Will be resolved by file extension in the constructor"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+isDirty"}),"\n",(0,i.jsxs)(n.h3,{id:"documentisdirty--boolean",children:["document.isDirty : ",(0,i.jsx)("code",{children:"boolean"})]}),"\n",(0,i.jsx)(n.p,{children:'Whether this document has unsaved changes or not.\nWhen this changes on any Document, DocumentManager dispatches a "dirtyFlagChange" event.'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+isSaving"}),"\n",(0,i.jsxs)(n.h3,{id:"documentissaving--boolean",children:["document.isSaving : ",(0,i.jsx)("code",{children:"boolean"})]}),"\n",(0,i.jsx)(n.p,{children:"Whether this document is currently being saved."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+diskTimestamp"}),"\n",(0,i.jsxs)(n.h3,{id:"documentdisktimestamp--date",children:["document.diskTimestamp : ",(0,i.jsx)("code",{children:"Date"})]}),"\n",(0,i.jsx)(n.p,{children:"What we expect the file's timestamp to be on disk. If the timestamp differs from this, then\nit means the file was modified by an app other than Brackets."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+lastChangeTimestamp"}),"\n",(0,i.jsxs)(n.h3,{id:"documentlastchangetimestamp--number",children:["document.lastChangeTimestamp : ",(0,i.jsx)("code",{children:"number"})]}),"\n",(0,i.jsx)(n.p,{children:"Keeps a running timestamp of when the document was last changed. You can use this timestamp to see a\ndocument was recently changed or not."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+keepChangesTime"}),"\n",(0,i.jsxs)(n.h3,{id:"documentkeepchangestime--number",children:["document.keepChangesTime : ",(0,i.jsx)("code",{children:"Number"})]}),"\n",(0,i.jsx)(n.p,{children:"The timestamp of the document at the point where the user last said to keep changes that conflict\nwith the current disk version. Can also be -1, indicating that the file was deleted on disk at the\nlast point when the user said to keep changes, or null, indicating that the user has not said to\nkeep changes.\nNote that this is a time as returned by Date.getTime(), not a Date object."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+addRef"}),"\n",(0,i.jsx)(n.h3,{id:"documentaddref",children:"document.addRef()"}),"\n",(0,i.jsx)(n.p,{children:"Add a ref to keep this Document alive"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+releaseRef"}),"\n",(0,i.jsx)(n.h3,{id:"documentreleaseref",children:"document.releaseRef()"}),"\n",(0,i.jsx)(n.p,{children:"Remove a ref that was keeping this Document alive"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+getText"}),"\n",(0,i.jsxs)(n.h3,{id:"documentgettextuseoriginallineendings--string",children:["document.getText([useOriginalLineEndings]) \u21d2 ",(0,i.jsx)("code",{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:'Returns the document\'s current contents; may not be saved to disk yet. Whenever this\nvalue changes, the Document dispatches a "change" event.'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"[useOriginalLineEndings]"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"boolean"})}),(0,i.jsx)(n.td,{children:"If true, line endings in the result depend on the      Document's line endings setting (based on OS & the original text loaded from disk).      If false, line endings are always \\n (like all the other Document text getter methods)."})]})})]}),"\n",(0,i.jsx)("a",{name:"Document+getSelectedText"}),"\n",(0,i.jsxs)(n.h3,{id:"documentgetselectedtextuseoriginallineendings-allselections--string--null",children:["document.getSelectedText([useOriginalLineEndings], [allSelections]) \u21d2 ",(0,i.jsx)("code",{children:"string"})," | ",(0,i.jsx)("code",{children:"null"})]}),"\n",(0,i.jsx)(n.p,{children:"Returns the document's current selected; may not be saved to disk yet. If editor is not open, will return null."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"string"})," | ",(0,i.jsx)("code",{children:"null"})," - selected text or null if there is no editor."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"[useOriginalLineEndings]"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"boolean"})}),(0,i.jsx)(n.td,{children:"If true, line endings in the result depend on the      Document's line endings setting (based on OS & the original text loaded from disk).      If false, line endings are always \\n (like all the other Document text getter methods)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"[allSelections]"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"boolean"})}),(0,i.jsx)(n.td,{children:"Whether to return the contents of all selections (separated     by newlines) instead of just the primary selection. Default false."})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+setText"}),"\n",(0,i.jsx)(n.h3,{id:"documentsettexttext",children:"document.setText(text)"}),"\n",(0,i.jsx)(n.p,{children:"Sets the contents of the document. Treated as an edit. Line endings will be rewritten to\nmatch the document's current line-ending style."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"text"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"string"})}),(0,i.jsx)(n.td,{children:"The text to replace the contents of the document with."})]})})]}),"\n",(0,i.jsx)("a",{name:"Document+refreshText"}),"\n",(0,i.jsx)(n.h3,{id:"documentrefreshtexttext-newtimestamp-initial",children:"document.refreshText(text, newTimestamp, initial)"}),"\n",(0,i.jsx)(n.p,{children:"Sets the contents of the document. Treated as reloading the document from disk: the document\nwill be marked clean with a new timestamp, the undo/redo history is cleared, and we re-check\nthe text's line-ending style. CAN be called even if there is no backing editor."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"text"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"string"})}),(0,i.jsx)(n.td,{children:"The text to replace the contents of the document with."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"newTimestamp"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Date"})}),(0,i.jsx)(n.td,{children:"Timestamp of file at the time we read its new contents from disk."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"initial"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"boolean"})}),(0,i.jsx)(n.td,{children:"True if this is the initial load of the document. In that case,      we don't send change events."})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+replaceRange"}),"\n",(0,i.jsx)(n.h3,{id:"documentreplacerangetext-start-end-origin",children:"document.replaceRange(text, start, end, origin)"}),"\n",(0,i.jsx)(n.p,{children:"Adds, replaces, or removes text. If a range is given, the text at that range is replaced with the\ngiven new text; if text == \"\", then the entire range is effectively deleted. If 'end' is omitted,\nthen the new text is inserted at that point and all existing text is preserved. Line endings will\nbe rewritten to match the document's current line-ending style."}),"\n",(0,i.jsxs)(n.p,{children:["IMPORTANT NOTE: Because of #1688, do not use this in cases where you might be\noperating on a linked document (like the main document for an inline editor)\nduring an outer CodeMirror operation (like a key event that's handled by the\neditor itself). A common case of this is code hints in inline editors. In\nsuch cases, use ",(0,i.jsx)(n.code,{children:"editor._codeMirror.replaceRange()"})," instead. This should be\nfixed when we migrate to use CodeMirror's native document-linking functionality."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"text"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"string"})}),(0,i.jsx)(n.td,{children:"Text to insert or replace the range with"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"start"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"Start of range, inclusive (if 'to' specified) or insertion point (if not)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"end"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"End of range, exclusive; optional"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"origin"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"string"})}),(0,i.jsx)(n.td,{children:'Optional string used to batch consecutive edits for undo.     If origin starts with "+", then consecutive edits with the same origin will be batched for undo if     they are close enough together in time.     If origin starts with "*", then all consecutive edit with the same origin will be batched for     undo.     Edits with origins starting with other characters will not be batched.     (Note that this is a higher level of batching than batchOperation(), which already batches all     edits within it for undo. Origin batching works across operations.)'})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+getRange"}),"\n",(0,i.jsxs)(n.h3,{id:"documentgetrangestart-end--string",children:["document.getRange(start, end) \u21d2 ",(0,i.jsx)("code",{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"Returns the characters in the given range. Line endings are normalized to '\\n'."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"start"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"Start of range, inclusive"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"end"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"End of range, exclusive"})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+getLine"}),"\n",(0,i.jsxs)(n.h3,{id:"documentgetlinezero-based--string",children:["document.getLine(Zero-based) \u21d2 ",(0,i.jsx)("code",{children:"string"})]}),"\n",(0,i.jsx)(n.p,{children:"Returns the text of the given line (excluding any line ending characters)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Zero-based"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"number"})}),(0,i.jsx)(n.td,{children:"line number"})]})})]}),"\n",(0,i.jsx)("a",{name:"Document+batchOperation"}),"\n",(0,i.jsx)(n.h3,{id:"documentbatchoperationdooperation",children:"document.batchOperation(doOperation)"}),"\n",(0,i.jsx)(n.p,{children:"Batches a series of related Document changes. Repeated calls to replaceRange() should be wrapped in a\nbatch for efficiency. Begins the batch, calls doOperation(), ends the batch, and then returns."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"doOperation"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"function"})})]})})]}),"\n",(0,i.jsx)("a",{name:"Document+notifySaved"}),"\n",(0,i.jsx)(n.h3,{id:"documentnotifysaved",children:"document.notifySaved()"}),"\n",(0,i.jsx)(n.p,{children:"Called when the document is saved (which currently happens in DocumentCommandHandlers). Marks the\ndocument not dirty and notifies listeners of the save."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]}),"\n",(0,i.jsx)("a",{name:"Document+adjustPosForChange"}),"\n",(0,i.jsxs)(n.h3,{id:"documentadjustposforchangepos-textlines-start-end--object",children:["document.adjustPosForChange(pos, textLines, start, end) \u21d2 ",(0,i.jsx)("code",{children:"Object"})]}),"\n",(0,i.jsx)(n.p,{children:"Adjusts a given position taking a given replaceRange-type edit into account.\nIf the position is within the original edit range (start and end inclusive),\nit gets pushed to the end of the content that replaced the range. Otherwise,\nif it's after the edit, it gets adjusted so it refers to the same character\nit did before the edit."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"Object"})," - The adjusted position."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"pos"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"The position to adjust."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"textLines"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Array.<string>"})}),(0,i.jsx)(n.td,{children:"The text of the change, split into an array of lines."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"start"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"The start of the edit."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"end"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsx)(n.td,{children:"The end of the edit."})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+doMultipleEdits"}),"\n",(0,i.jsxs)(n.h3,{id:"documentdomultipleeditsedits-origin--object",children:["document.doMultipleEdits(edits, origin) \u21d2 ",(0,i.jsx)("code",{children:"Object"})]}),"\n",(0,i.jsx)(n.p,{children:'Helper function for edit operations that operate on multiple selections. Takes an "edit list"\nthat specifies a list of replaceRanges that should occur, but where all the positions are with\nrespect to the document state before all the edits (i.e., you don\'t have to figure out how to fix\nup the selections after each sub-edit). Edits must be non-overlapping (in original-document terms).\nAll the edits are done in a single batch.'}),"\n",(0,i.jsxs)(n.p,{children:["If your edits are structured in such a way that each individual edit would cause its associated\nselection to be properly updated, then all you need to specify are the edits themselves, and the\nselections will automatically be updated as the edits are performed. However, for some\nkinds of edits, you need to fix up the selection afterwards. In that case, you can specify one\nor more selections to be associated with each edit. Those selections are assumed to be in terms\nof the document state after the edit, ",(0,i.jsx)(n.em,{children:"as if"})," that edit were the only one being performed (i.e.,\nyou don't have to worry about adjusting for the effect of other edits). If you supply these selections,\nthen this function will adjust them as necessary for the effects of other edits, and then return a\nflat list of all the selections, suitable for passing to ",(0,i.jsx)(n.code,{children:"setSelections()"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"Object"})," - The list of passed selections adjusted for the performed edits, if any."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"edits"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Object"})}),(0,i.jsxs)(n.td,{children:["Specifies the list of edits to perform in a manner similar to CodeMirror's ",(0,i.jsx)(n.code,{children:"replaceRange"}),". This array     will be mutated.     ",(0,i.jsx)(n.code,{children:"edit"})," is the edit to perform:         ",(0,i.jsx)(n.code,{children:"text"})," will replace the current contents of the range between ",(0,i.jsx)(n.code,{children:"start"})," and ",(0,i.jsx)(n.code,{children:"end"}),".         If ",(0,i.jsx)(n.code,{children:"end"})," is unspecified, the text is inserted at ",(0,i.jsx)(n.code,{children:"start"}),".         ",(0,i.jsx)(n.code,{children:"start"})," and ",(0,i.jsx)(n.code,{children:"end"})," should be positions relative to the document ",(0,i.jsx)(n.em,{children:"ignoring"})," all other edit descriptions         (i.e., as if you were only performing this one edit on the document).     If any of the edits overlap, an error will be thrown.     If ",(0,i.jsx)(n.code,{children:"selection"})," is specified, it should be a selection associated with this edit.          If ",(0,i.jsx)(n.code,{children:"isBeforeEdit"})," is set on the selection, the selection will be fixed up for this edit.          If not, it won't be fixed up for this edit, meaning it should be expressed in terms of          the document state after this individual edit is performed (ignoring any other edits).          Note that if you were planning on just specifying ",(0,i.jsx)(n.code,{children:"isBeforeEdit"})," for every selection, you can          accomplish the same thing by simply not passing any selections and letting the editor update          the existing selections automatically.     Note that ",(0,i.jsx)(n.code,{children:"edit"})," and ",(0,i.jsx)(n.code,{children:"selection"})," can each be either an individual edit/selection, or a group of     edits/selections to apply in order. This can be useful if you need to perform multiple edits in a row     and then specify a resulting selection that shouldn't be fixed up for any of those edits (but should be     fixed up for edits related to other selections). It can also be useful if you have several selections     that should ignore the effects of a given edit because you've fixed them up already (this commonly happens     with line-oriented edits where multiple cursors on the same line should be ignored, but still tracked).     Within an edit group, edit positions must be specified relative to previous edits within that group. Also,     the total bounds of edit groups must not overlap (e.g. edits in one group can't surround an edit from another group)."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"origin"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"string"})}),(0,i.jsx)(n.td,{children:"An optional edit origin that's passed through to each replaceRange()."})]})]})]}),"\n",(0,i.jsx)("a",{name:"Document+getLanguage"}),"\n",(0,i.jsxs)(n.h3,{id:"documentgetlanguage--language",children:["document.getLanguage() \u21d2 ",(0,i.jsx)("code",{children:"Language"})]}),"\n",(0,i.jsx)(n.p,{children:"Returns the language this document is written in.\nThe language returned is based on the file extension."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"Language"})," - An object describing the language used in this document"]}),"\n",(0,i.jsx)("a",{name:"Document+isUntitled"}),"\n",(0,i.jsxs)(n.h3,{id:"documentisuntitled--boolean",children:["document.isUntitled() \u21d2 ",(0,i.jsx)("code",{children:"boolean"})]}),"\n",(0,i.jsx)(n.p,{children:"Is this an untitled document?"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"boolean"})," - - whether or not the document is untitled"]}),"\n",(0,i.jsx)("a",{name:"Document+reload"}),"\n",(0,i.jsxs)(n.h3,{id:"documentreload--promise",children:["document.reload() \u21d2 ",(0,i.jsx)("code",{children:"promise"})]}),"\n",(0,i.jsx)(n.p,{children:"Reloads the document from FileSystem"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"promise"})," - - to check if reload was successful or not"]}),"\n",(0,i.jsx)("a",{name:"Document.normalizeText"}),"\n",(0,i.jsx)(n.h3,{id:"documentnormalizetext",children:"Document.normalizeText()"}),"\n",(0,i.jsx)(n.p,{children:"Normalizes line endings the same way CodeMirror would"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": static method of ",(0,i.jsx)(n.a,{href:"#Document",children:(0,i.jsx)("code",{children:"Document"})})]})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(96540);const s={},d=i.createContext(s);function r(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);