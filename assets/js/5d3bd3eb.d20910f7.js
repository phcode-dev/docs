"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3741],{15505:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=n(74848),c=n(28453);const i={},s=void 0,o={id:"API-Reference/project/FileSyncManager",title:"FileSyncManager",description:"Import :",source:"@site/api/API-Reference/project/FileSyncManager.md",sourceDirName:"API-Reference/project",slug:"/API-Reference/project/FileSyncManager",permalink:"/api/API-Reference/project/FileSyncManager",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"StateManager",permalink:"/api/API-Reference/preferences/StateManager"},next:{title:"FileTreeView",permalink:"/api/API-Reference/project/FileTreeView"}},a={},l=[{value:"Import :",id:"import-",level:3},{value:"syncOpenDocuments(title)",id:"syncopendocumentstitle",level:2}];function d(e){const t={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"import-",children:"Import :"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'const FileSyncManager = brackets.getModule("project/FileSyncManager")\n'})}),"\n",(0,r.jsx)("a",{name:"syncOpenDocuments"}),"\n",(0,r.jsx)(t.h2,{id:"syncopendocumentstitle",children:"syncOpenDocuments(title)"}),"\n",(0,r.jsx)(t.p,{children:"Check to see whether any open files have been modified by an external app since the last time\nBrackets synced up with the copy on disk (either by loading or saving the file). For clean\nfiles, we silently upate the editor automatically. For files with unsaved changes, we prompt\nthe user."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Kind"}),": global function"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"title"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"string"})}),(0,r.jsx)(t.td,{children:'Title to use for document. Default is "External Changes".'})]})})]})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(96540);const c={},i=r.createContext(c);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);