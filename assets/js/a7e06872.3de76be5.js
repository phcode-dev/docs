"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3565],{24407:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>l});var t=n(74848),r=n(28453);const d={},i=void 0,c={id:"API-Reference/features/TaskManager",title:"TaskManager",description:"Import :",source:"@site/api/API-Reference/features/TaskManager.md",sourceDirName:"API-Reference/features",slug:"/API-Reference/features/TaskManager",permalink:"/api/API-Reference/features/TaskManager",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SelectionViewManager",permalink:"/api/API-Reference/features/SelectionViewManager"},next:{title:"EventDispatcher",permalink:"/api/API-Reference/utils/EventDispatcher"}},a={},l=[{value:"Import :",id:"import-",level:3},{value:"features/TaskManager",id:"featurestaskmanager",level:2},{value:"features/TaskManager.renderSpinnerIcon()",id:"featurestaskmanagerrenderspinnericon",level:3},{value:"features/TaskManager.addNewTask(taskTitle, message, [iconHTML], [options]) \u21d2 <code>TaskObject</code>",id:"featurestaskmanageraddnewtasktasktitle-message-iconhtml-options--taskobject",level:3},{value:"features/TaskManager.TaskObject : <code>Object</code>",id:"featurestaskmanagertaskobject--object",level:3}];function o(e){const s={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h3,{id:"import-",children:"Import :"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:'brackets.getModule("features/TaskManager")\n'})}),"\n",(0,t.jsx)("a",{name:"module_features/TaskManager"}),"\n",(0,t.jsx)(s.h2,{id:"featurestaskmanager",children:"features/TaskManager"}),"\n",(0,t.jsxs)(s.p,{children:["TaskManager module deals with managing long running tasks in phcode. It handles the ",(0,t.jsx)(s.code,{children:"Tasks"})," dropdown in the status\nbar where the user can see all running tasks, monitor its progress and close/pause the execution of the task if\nsupported by the task."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"#module_features/TaskManager",children:"features/TaskManager"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"#module_features/TaskManager..renderSpinnerIcon",children:".renderSpinnerIcon()"})}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"#module_features/TaskManager..addNewTask",children:".addNewTask(taskTitle, message, [iconHTML], [options])"})," \u21d2 ",(0,t.jsx)("code",{children:"TaskObject"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"#module_features/TaskManager..TaskObject",children:".TaskObject"})," : ",(0,t.jsx)("code",{children:"Object"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)("a",{name:"module_features/TaskManager..renderSpinnerIcon"}),"\n",(0,t.jsx)(s.h3,{id:"featurestaskmanagerrenderspinnericon",children:"features/TaskManager.renderSpinnerIcon()"}),"\n",(0,t.jsx)(s.p,{children:"determines what the spinner icon to show(green-for success), red-fail, blue normal based on the active\ntasks in list and renders. IF the active tasks has already  been notified, it wont notify again."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kind"}),": inner method of ",(0,t.jsx)(s.a,{href:"#module_features/TaskManager",children:(0,t.jsx)("code",{children:"features/TaskManager"})})]}),"\n",(0,t.jsx)("a",{name:"module_features/TaskManager..addNewTask"}),"\n",(0,t.jsxs)(s.h3,{id:"featurestaskmanageraddnewtasktasktitle-message-iconhtml-options--taskobject",children:["features/TaskManager.addNewTask(taskTitle, message, [iconHTML], [options]) \u21d2 ",(0,t.jsx)("code",{children:"TaskObject"})]}),"\n",(0,t.jsx)(s.p,{children:"The addNewTask is designed for adding new tasks to the task management system. This function is central to\nmanaging long-running tasks, providing a way to visually represent task progress, status, and control actions\ndirectly from the UI in the status bar."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kind"}),": inner method of ",(0,t.jsx)(s.a,{href:"#module_features/TaskManager",children:(0,t.jsx)("code",{children:"features/TaskManager"})}),(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Returns"}),": ",(0,t.jsx)("code",{children:"TaskObject"})," - Returns a task object with methods for updating the task's state and UI representation,\nsuch as ",(0,t.jsx)(s.code,{children:"setProgressPercent"}),", ",(0,t.jsx)(s.code,{children:"setMessage"}),", ",(0,t.jsx)(s.code,{children:"setSucceeded"}),", ",(0,t.jsx)(s.code,{children:"setFailed"}),", and control visibility methods\nlike ",(0,t.jsx)(s.code,{children:"showStopIcon"}),", ",(0,t.jsx)(s.code,{children:"hideStopIcon"}),", etc."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Param"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Default"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"taskTitle"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"string"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"The title of the task. This is a mandatory parameter and is displayed in the UI."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"message"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"string"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"A message or status associated with the task. Displayed as additional information in the UI."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[iconHTML]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"string"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"null"})}),(0,t.jsx)(s.td,{children:"Optional HTML string for the task's icon. Used to visually represent the task in the UI."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"Object"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Optional settings and callbacks for the task."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.onPauseClick]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Callback function triggered when the pause button is clicked."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.onPlayClick]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Callback function triggered when the play button is clicked."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.onStopClick]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Callback function triggered when the stop button is clicked."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.onRetryClick]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Callback function triggered when the retry button is clicked."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.onSelect]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Callback function triggered when the task is selected from the dropdown."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.progressPercent]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"number"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Initial progress percentage of the task."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"[options.noSpinnerNotification]"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"boolean"})}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"If set to true, will not show the task spinners for this task.         This can be used for silent background tasks where user attention is not needed."})]})]})]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Example"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",children:"// Example: Adding a new task with initial progress and attaching event handlers\nconst task = TaskManager.addNewTask(\n  'Data Processing',\n  'Processing data...',\n  '<i class=\"fa fa-spinner fa-spin\"></i>',\n  {\n    onPauseClick: () => console.log('Task paused'),\n    onPlayClick: () => console.log('Task resumed'),\n    onStopClick: () => console.log('Task stopped'),\n    onRetryClick: () => console.log('Task retried'),\n    onSelect: () => console.log('Task selected'),\n    progressPercent: 20\n  }\n);\n\n// Updating task progress\ntask.setProgressPercent(60);\n\n// Updating task message\ntask.setMessage('60% completed');\n\n// Marking task as succeeded\ntask.setSucceeded();\n"})}),"\n",(0,t.jsx)("a",{name:"module_features/TaskManager..TaskObject"}),"\n",(0,t.jsxs)(s.h3,{id:"featurestaskmanagertaskobject--object",children:["features/TaskManager.TaskObject : ",(0,t.jsx)("code",{children:"Object"})]}),"\n",(0,t.jsx)(s.p,{children:"Methods for managing the task's state and UI representation in the TaskManager."}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Kind"}),": inner typedef of ",(0,t.jsx)(s.a,{href:"#module_features/TaskManager",children:(0,t.jsx)("code",{children:"features/TaskManager"})}),(0,t.jsx)(s.br,{}),"\n",(0,t.jsx)(s.strong,{children:"Properties"})]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Name"}),(0,t.jsx)(s.th,{children:"Type"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"show"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Shows the task popup in the ui."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"close"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Closes the task and removes it from the UI."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"setTitle"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Sets the task's title."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"getTitle"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Returns the task's title."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"setMessage"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Sets the task's message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"getMessage"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Returns the task's message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"setProgressPercent"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Sets the task's progress percentage."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"getProgressPercent"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Returns the task's current progress percentage."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"setFailed"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Marks the task as failed."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"isFailed"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Returns true if the task is marked as failed."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"setSucceded"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Marks the task as succeeded."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"isSucceded"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Returns true if the task is marked as succeeded."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"showStopIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Shows the stop icon with an optional tooltip message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"hideStopIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Hides the stop icon."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"showPlayIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Shows the play icon with an optional tooltip message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"hidePlayIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Hides the play icon."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"showPauseIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Shows the pause icon with an optional tooltip message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"hidePauseIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Hides the pause icon."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"showRestartIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Shows the restart (retry) icon with an optional tooltip message."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"hideRestartIcon"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"Hides the restart (retry) icon."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"flashSpinnerForAttention"}),(0,t.jsx)(s.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(s.td,{children:"briefly flashes the task spinner icon for attention."})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>c});var t=n(96540);const r={},d=t.createContext(r);function i(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);