"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3938],{70701:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var t=o(74848),c=o(28453);const i={},r=void 0,d={id:"API-Reference/utils/NodeConnection",title:"NodeConnection",description:"Import :",source:"@site/api/API-Reference/utils/NodeConnection.md",sourceDirName:"API-Reference/utils",slug:"/API-Reference/utils/NodeConnection",permalink:"/api/API-Reference/utils/NodeConnection",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Global",permalink:"/api/API-Reference/utils/Global"},next:{title:"PerfUtils",permalink:"/api/API-Reference/utils/PerfUtils"}},s={},l=[{value:"Import :",id:"import-",level:3},{value:"NodeConnection",id:"nodeconnection",level:2},{value:"new NodeConnection()",id:"new-nodeconnection",level:3},{value:"nodeConnection.domains : <code>Object</code>",id:"nodeconnectiondomains--object",level:3},{value:"nodeConnection.connect(autoReconnect) \u21d2 <code>jQuery.Promise</code>",id:"nodeconnectionconnectautoreconnect--jquerypromise",level:3},{value:"nodeConnection.connected() \u21d2 <code>boolean</code>",id:"nodeconnectionconnected--boolean",level:3},{value:"nodeConnection.disconnect()",id:"nodeconnectiondisconnect",level:3},{value:"nodeConnection.loadDomains(List, autoReload) \u21d2 <code>jQuery.Promise</code>",id:"nodeconnectionloaddomainslist-autoreload--jquerypromise",level:3},{value:"CONNECTION_ATTEMPTS : <code>number</code>",id:"connection_attempts--number",level:2},{value:"CONNECTION_TIMEOUT : <code>number</code>",id:"connection_timeout--number",level:2},{value:"RETRY_DELAY : <code>number</code>",id:"retry_delay--number",level:2},{value:"MAX_COUNTER_VALUE : <code>number</code>",id:"max_counter_value--number",level:2}];function a(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const NodeConnection = brackets.getModule("utils/NodeConnection")\n'})}),"\n",(0,t.jsx)("a",{name:"NodeConnection"}),"\n",(0,t.jsx)(n.h2,{id:"nodeconnection",children:"NodeConnection"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global class"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#NodeConnection",children:"NodeConnection"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#new_NodeConnection_new",children:"new NodeConnection()"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#NodeConnection+domains",children:".domains"})," : ",(0,t.jsx)("code",{children:"Object"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#NodeConnection+connect",children:".connect(autoReconnect)"})," \u21d2 ",(0,t.jsx)("code",{children:"jQuery.Promise"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#NodeConnection+connected",children:".connected()"})," \u21d2 ",(0,t.jsx)("code",{children:"boolean"})]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#NodeConnection+disconnect",children:".disconnect()"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#NodeConnection+loadDomains",children:".loadDomains(List, autoReload)"})," \u21d2 ",(0,t.jsx)("code",{children:"jQuery.Promise"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)("a",{name:"new_NodeConnection_new"}),"\n",(0,t.jsx)(n.h3,{id:"new-nodeconnection",children:"new NodeConnection()"}),"\n",(0,t.jsx)(n.p,{children:"Provides an interface for interacting with the node server."}),"\n",(0,t.jsx)("a",{name:"NodeConnection+domains"}),"\n",(0,t.jsxs)(n.h3,{id:"nodeconnectiondomains--object",children:["nodeConnection.domains : ",(0,t.jsx)("code",{children:"Object"})]}),"\n",(0,t.jsxs)(n.p,{children:["Exposes the domains registered with the server. This object willhave a property for each registered domain. Each of those propertieswill be an object containing properties for all the commands in thatdomain. So, myConnection.base.enableDebugger would point to the functionto call to enable the debugger.This object is automatically replaced every time the API changes (basedon the base",":newDomains"," event from the server). Therefore, code thatuses this object should not keep their own pointer to the domain property."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,t.jsx)(n.a,{href:"#NodeConnection",children:(0,t.jsx)("code",{children:"NodeConnection"})})]}),"\n",(0,t.jsx)("a",{name:"NodeConnection+connect"}),"\n",(0,t.jsxs)(n.h3,{id:"nodeconnectionconnectautoreconnect--jquerypromise",children:["nodeConnection.connect(autoReconnect) \u21d2 ",(0,t.jsx)("code",{children:"jQuery.Promise"})]}),"\n",(0,t.jsx)(n.p,{children:'Connect to the node server. After connecting, the NodeConnection\robject will trigger a "close" event when the underlying socket\ris closed. If the connection is set to autoReconnect, then the\revent will also include a jQuery promise for the connection.'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,t.jsx)(n.a,{href:"#NodeConnection",children:(0,t.jsx)("code",{children:"NodeConnection"})}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Returns"}),": ",(0,t.jsx)("code",{children:"jQuery.Promise"})," - Promise that resolves/rejects when the\rconnection succeeds/fails"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Param"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"autoReconnect"}),(0,t.jsx)(n.td,{children:(0,t.jsx)("code",{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Whether to automatically try to    reconnect to the server if the connection succeeds and then    later disconnects. Note if this connection fails initially, the    autoReconnect flag is set to false. Future calls to connect()    can reset it to true"})]})})]}),"\n",(0,t.jsx)("a",{name:"NodeConnection+connected"}),"\n",(0,t.jsxs)(n.h3,{id:"nodeconnectionconnected--boolean",children:["nodeConnection.connected() \u21d2 ",(0,t.jsx)("code",{children:"boolean"})]}),"\n",(0,t.jsx)(n.p,{children:"Determines whether the NodeConnection is currently connected"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,t.jsx)(n.a,{href:"#NodeConnection",children:(0,t.jsx)("code",{children:"NodeConnection"})}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Returns"}),": ",(0,t.jsx)("code",{children:"boolean"})," - Whether the NodeConnection is connected."]}),"\n",(0,t.jsx)("a",{name:"NodeConnection+disconnect"}),"\n",(0,t.jsx)(n.h3,{id:"nodeconnectiondisconnect",children:"nodeConnection.disconnect()"}),"\n",(0,t.jsx)(n.p,{children:"Explicitly disconnects from the server. Note that even if\rautoReconnect was set to true at connection time, the connection\rwill not reconnect after this call. Reconnection can be manually done\rby calling connect() again."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,t.jsx)(n.a,{href:"#NodeConnection",children:(0,t.jsx)("code",{children:"NodeConnection"})})]}),"\n",(0,t.jsx)("a",{name:"NodeConnection+loadDomains"}),"\n",(0,t.jsxs)(n.h3,{id:"nodeconnectionloaddomainslist-autoreload--jquerypromise",children:["nodeConnection.loadDomains(List, autoReload) \u21d2 ",(0,t.jsx)("code",{children:"jQuery.Promise"})]}),"\n",(0,t.jsx)(n.p,{children:"Load domains into the server by path"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,t.jsx)(n.a,{href:"#NodeConnection",children:(0,t.jsx)("code",{children:"NodeConnection"})}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Returns"}),": ",(0,t.jsx)("code",{children:"jQuery.Promise"})," - Promise that resolves after the load has\rsucceeded and the new API is availale at NodeConnection.domains,\ror that rejects on failure."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Param"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"List"}),(0,t.jsx)(n.td,{children:(0,t.jsx)("code",{children:"Array.<string>"})}),(0,t.jsx)(n.td,{children:"of absolute paths to load"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"autoReload"}),(0,t.jsx)(n.td,{children:(0,t.jsx)("code",{children:"boolean"})}),(0,t.jsx)(n.td,{children:"Whether to auto-reload the domains if the server    fails and restarts. Note that the reload is initiated by the    client, so it will only happen after the client reconnects."})]})]})]}),"\n",(0,t.jsx)("a",{name:"CONNECTION_ATTEMPTS"}),"\n",(0,t.jsxs)(n.h2,{id:"connection_attempts--number",children:["CONNECTION_ATTEMPTS : ",(0,t.jsx)("code",{children:"number"})]}),"\n",(0,t.jsx)(n.p,{children:"Connection attempts to make before failing"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,t.jsx)("a",{name:"CONNECTION_TIMEOUT"}),"\n",(0,t.jsxs)(n.h2,{id:"connection_timeout--number",children:["CONNECTION_TIMEOUT : ",(0,t.jsx)("code",{children:"number"})]}),"\n",(0,t.jsx)(n.p,{children:"Milliseconds to wait before a particular connection attempt is considered failed.\rNOTE: It's okay for the connection timeout to be long because the\rexpected behavior of WebSockets is to send a \"close\" event as soon\ras they realize they can't connect. So, we should rarely hit the\rconnection timeout even if we try to connect to a port that isn't open."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,t.jsx)("a",{name:"RETRY_DELAY"}),"\n",(0,t.jsxs)(n.h2,{id:"retry_delay--number",children:["RETRY_DELAY : ",(0,t.jsx)("code",{children:"number"})]}),"\n",(0,t.jsx)(n.p,{children:"Milliseconds to wait before retrying connecting"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,t.jsx)("a",{name:"MAX_COUNTER_VALUE"}),"\n",(0,t.jsxs)(n.h2,{id:"max_counter_value--number",children:["MAX_COUNTER_VALUE : ",(0,t.jsx)("code",{children:"number"})]}),"\n",(0,t.jsx)(n.p,{children:"Maximum value of the command ID counter"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global variable"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>d});var t=o(96540);const c={},i=t.createContext(c);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);