"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6397],{54183:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var t=n(74848),i=n(28453);const a={},c=void 0,s={id:"API-Reference/view/MainViewFactory",title:"MainViewFactory",description:"Import :",source:"@site/api/API-Reference/view/MainViewFactory.md",sourceDirName:"API-Reference/view",slug:"/API-Reference/view/MainViewFactory",permalink:"/api/API-Reference/view/MainViewFactory",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ZipUtils",permalink:"/api/API-Reference/utils/ZipUtils"},next:{title:"MainViewManager",permalink:"/api/API-Reference/view/MainViewManager"}},o={},l=[{value:"Import :",id:"import-",level:3},{value:"_",id:"_",level:2},{value:"registerViewFactory(factory)",id:"registerviewfactoryfactory",level:2},{value:"findSuitableFactoryForPath(fullPath) \u21d2 <code>Factory</code>",id:"findsuitablefactoryforpathfullpath--factory",level:2},{value:"Factory : <code>Object</code>",id:"factory--object",level:2}];function d(e){const r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h3,{id:"import-",children:"Import :"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'const MainViewFactory = brackets.getModule("view/MainViewFactory")\n'})}),"\n",(0,t.jsx)("a",{name:"_"}),"\n",(0,t.jsx)(r.h2,{id:"_",children:"_"}),"\n",(0,t.jsx)(r.p,{children:"MainViewFactory is a singleton for managing view factories."}),"\n",(0,t.jsx)(r.p,{children:"Registering a view factory:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'     registerViewFactory({\r          canOpenFile: function (fullPath) {\r              return (fullPath.slice(-4) === ".ico");\r          },\r          openFile: function(file, pane) {\r              return createIconView(file, pane);\r          }\r     });\n'})}),"\n",(0,t.jsx)(r.p,{children:"The openFile method is used to open the file and construct\ra view of it.  Implementation should add the view to the pane"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"     function createIconView(file, pane) {\r         // IconView will construct its DOM and append\r         //  it to pane.$el\r         var view = new IconView(file, pane.$el);\r         // Then tell the pane to add it to\r         //  its view map and show it\r         pane.addView(view, true);\r         return new $.Deferred().resolve().promise();\r     }\n"})}),"\n",(0,t.jsx)(r.p,{children:"Factories should only create 1 view of a file per pane.  Brackets currently only supports 1 view of\ra file open at a given time but that may change to allow the same file open in more than 1 pane. Therefore\rFactories can do a simple check to see if a view already exists and show it before creating a new one:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:"     var view = pane.getViewForPath(file.fullPath);\r     if (view) {\r         pane.showView(view);\r     } else {\r         return createIconView(file, pane);\r     }\n"})}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,t.jsx)("a",{name:"registerViewFactory"}),"\n",(0,t.jsx)(r.h2,{id:"registerviewfactoryfactory",children:"registerViewFactory(factory)"}),"\n",(0,t.jsx)(r.p,{children:"Registers a view factory"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Param"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"factory"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"#Factory",children:(0,t.jsx)("code",{children:"Factory"})})}),(0,t.jsx)(r.td,{children:"The view factory to register."})]})})]}),"\n",(0,t.jsx)("a",{name:"findSuitableFactoryForPath"}),"\n",(0,t.jsxs)(r.h2,{id:"findsuitablefactoryforpathfullpath--factory",children:["findSuitableFactoryForPath(fullPath) \u21d2 ",(0,t.jsx)(r.a,{href:"#Factory",children:(0,t.jsx)("code",{children:"Factory"})})]}),"\n",(0,t.jsx)(r.p,{children:"Finds a factory that can open the specified file"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Kind"}),": global function",(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.strong,{children:"Returns"}),": ",(0,t.jsx)(r.a,{href:"#Factory",children:(0,t.jsx)("code",{children:"Factory"})})," - A factory that can create a view for the path or undefined if there isn't one."]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Param"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsx)(r.tbody,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"fullPath"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("code",{children:"string"})}),(0,t.jsx)(r.td,{children:"The file to open."})]})})]}),"\n",(0,t.jsx)("a",{name:"Factory"}),"\n",(0,t.jsxs)(r.h2,{id:"factory--object",children:["Factory : ",(0,t.jsx)("code",{children:"Object"})]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Kind"}),": global typedef",(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.strong,{children:"Properties"})]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Name"}),(0,t.jsx)(r.th,{children:"Type"}),(0,t.jsx)(r.th,{children:"Description"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"canOpenFile"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(r.td,{children:"Checks if the factory can open the file by its path."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"openFile"}),(0,t.jsx)(r.td,{children:(0,t.jsx)("code",{children:"function"})}),(0,t.jsx)(r.td,{children:"Function to open the file and return a promise."})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>c,x:()=>s});var t=n(96540);const i={},a=t.createContext(i);function c(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);