"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6779],{67989:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>d});var s=n(74848),c=n(28453);const l={},a=void 0,t={id:"API-Reference/search/ScrollTrackMarkers",title:"ScrollTrackMarkers",description:"Import :",source:"@site/api/API-Reference/search/ScrollTrackMarkers.md",sourceDirName:"API-Reference/search",slug:"/API-Reference/search/ScrollTrackMarkers",permalink:"/api/API-Reference/search/ScrollTrackMarkers",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"QuickSearchField",permalink:"/api/API-Reference/search/QuickSearchField"},next:{title:"SearchModel",permalink:"/api/API-Reference/search/SearchModel"}},i={},d=[{value:"Import :",id:"import-",level:3},{value:"_",id:"_",level:2},{value:"editor : <code>Editor</code>",id:"editor--editor",level:2},{value:"trackOffset : <code>number</code>",id:"trackoffset--number",level:2},{value:"trackHt : <code>number</code>",id:"trackht--number",level:2},{value:"marks : <code>Object</code>",id:"marks--object",level:2},{value:"$markedTickmark : <code>jQueryObject</code>",id:"markedtickmark--jqueryobject",level:2},{value:"scrollbarTrackOffset : <code>number</code>",id:"scrollbartrackoffset--number",level:2},{value:"getScrollbarTrackOffset() \u21d2 <code>number</code>",id:"getscrollbartrackoffset--number",level:2},{value:"setScrollbarTrackOffset(offset)",id:"setscrollbartrackoffsetoffset",level:2},{value:"_calcScaling()",id:"_calcscaling",level:2},{value:"_renderMarks()",id:"_rendermarks",level:2},{value:"clear()",id:"clear",level:2},{value:"setVisible()",id:"setvisible",level:2},{value:"addTickmarks(curEditor, posArray)",id:"addtickmarkscureditor-posarray",level:2},{value:"markCurrent(index)",id:"markcurrentindex",level:2}];function o(e){const r={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'const ScrollTrackMarkers = brackets.getModule("search/ScrollTrackMarkers")\n'})}),"\n",(0,s.jsx)("a",{name:"_"}),"\n",(0,s.jsx)(r.h2,{id:"_",children:"_"}),"\n",(0,s.jsx)(r.p,{children:"Manages tickmarks shown along the scrollbar track.\rNOT yet intended for use by anyone other than the FindReplace module.\rIt is assumed that markers are always clear()ed when switching editors."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"editor"}),"\n",(0,s.jsxs)(r.h2,{id:"editor--editor",children:["editor : ",(0,s.jsx)("code",{children:"Editor"})]}),"\n",(0,s.jsx)(r.p,{children:"Editor the markers are currently shown for, or null if not shown"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"trackOffset"}),"\n",(0,s.jsxs)(r.h2,{id:"trackoffset--number",children:["trackOffset : ",(0,s.jsx)("code",{children:"number"})]}),"\n",(0,s.jsx)(r.p,{children:"Top of scrollbar track area, relative to top of scrollbar"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"trackHt"}),"\n",(0,s.jsxs)(r.h2,{id:"trackht--number",children:["trackHt : ",(0,s.jsx)("code",{children:"number"})]}),"\n",(0,s.jsx)(r.p,{children:"Height of scrollbar track area"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"marks"}),"\n",(0,s.jsxs)(r.h2,{id:"marks--object",children:["marks : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Text positions of markers"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"$markedTickmark"}),"\n",(0,s.jsxs)(r.h2,{id:"markedtickmark--jqueryobject",children:["$markedTickmark : ",(0,s.jsx)("code",{children:"jQueryObject"})]}),"\n",(0,s.jsx)(r.p,{children:"Tickmark markCurrent() last called on, or null if never called / called with -1."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"scrollbarTrackOffset"}),"\n",(0,s.jsxs)(r.h2,{id:"scrollbartrackoffset--number",children:["scrollbarTrackOffset : ",(0,s.jsx)("code",{children:"number"})]}),"\n",(0,s.jsx)(r.p,{children:"Vertical space above and below the scrollbar"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"getScrollbarTrackOffset"}),"\n",(0,s.jsxs)(r.h2,{id:"getscrollbartrackoffset--number",children:["getScrollbarTrackOffset() \u21d2 ",(0,s.jsx)("code",{children:"number"})]}),"\n",(0,s.jsx)(r.p,{children:"Vertical space above and below the scrollbar."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"number"})," - amount Value in pixels"]}),"\n",(0,s.jsx)("a",{name:"setScrollbarTrackOffset"}),"\n",(0,s.jsx)(r.h2,{id:"setscrollbartrackoffsetoffset",children:"setScrollbarTrackOffset(offset)"}),"\n",(0,s.jsx)(r.p,{children:"Sets how much vertical space there's above and below the scrollbar, which depends\ron the OS and may also be affected by extensions"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"offset"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"Value in pixels"})]})})]}),"\n",(0,s.jsx)("a",{name:"_calcScaling"}),"\n",(0,s.jsx)(r.h2,{id:"_calcscaling",children:"_calcScaling()"}),"\n",(0,s.jsx)(r.p,{children:"Measure scrollbar track"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"_renderMarks"}),"\n",(0,s.jsx)(r.h2,{id:"_rendermarks",children:"_renderMarks()"}),"\n",(0,s.jsx)(r.p,{children:"Add all the given tickmarks to the DOM in a batch"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"clear"}),"\n",(0,s.jsx)(r.h2,{id:"clear",children:"clear()"}),"\n",(0,s.jsx)(r.p,{children:"Clear any markers in the editor's tickmark track, but leave it visible. Safe to call when\rtickmark track is not visible also."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"setVisible"}),"\n",(0,s.jsx)(r.h2,{id:"setvisible",children:"setVisible()"}),"\n",(0,s.jsx)(r.p,{children:"Add or remove the tickmark track from the editor's UI"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"addTickmarks"}),"\n",(0,s.jsx)(r.h2,{id:"addtickmarkscureditor-posarray",children:"addTickmarks(curEditor, posArray)"}),"\n",(0,s.jsx)(r.p,{children:"Add tickmarks to the editor's tickmark track, if it's visible"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"curEditor"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Editor"})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"posArray"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})})]})]})]}),"\n",(0,s.jsx)("a",{name:"markCurrent"}),"\n",(0,s.jsx)(r.h2,{id:"markcurrentindex",children:"markCurrent(index)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"index"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"Either -1, or an index into the array passed to addTickmarks()"})]})})]})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>t});var s=n(96540);const c={},l=s.createContext(c);function a(e){const r=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),s.createElement(l.Provider,{value:r},e.children)}}}]);