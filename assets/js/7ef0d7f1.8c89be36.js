"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3533],{62860:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>a,frontMatter:()=>t,metadata:()=>d,toc:()=>h});const d=JSON.parse('{"id":"API-Reference/filesystem/FileIndex","title":"FileIndex","description":"Import :","source":"@site/api/API-Reference/filesystem/FileIndex.md","sourceDirName":"API-Reference/filesystem","slug":"/API-Reference/filesystem/FileIndex","permalink":"/api/API-Reference/filesystem/FileIndex","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"File","permalink":"/api/API-Reference/filesystem/File"},"next":{"title":"FileSystemEntry","permalink":"/api/API-Reference/filesystem/FileSystemEntry"}}');var l=i(74848),r=i(28453);const t={},s=void 0,c={},h=[{value:"Import :",id:"import-",level:3},{value:"FileIndex",id:"fileindex",level:2},{value:"fileIndex.clear()",id:"fileindexclear",level:3},{value:"fileIndex.doNotRemoveFromIndex()",id:"fileindexdonotremovefromindex",level:3},{value:"fileIndex.visitAll(Called)",id:"fileindexvisitallcalled",level:3},{value:"fileIndex.addEntry(entry)",id:"fileindexaddentryentry",level:3},{value:"fileIndex.removeEntry(entry)",id:"fileindexremoveentryentry",level:3},{value:"fileIndex.entryRenamed(oldPath, newPath, isDirectory)",id:"fileindexentryrenamedoldpath-newpath-isdirectory",level:3},{value:"fileIndex.getEntry(path) \u21d2 <code>File</code> | <code>Directory</code>",id:"fileindexgetentrypath--file--directory",level:3},{value:"FileUtils",id:"fileutils",level:2}];function x(e){const n={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const FileIndex = brackets.getModule("filesystem/FileIndex")\n'})}),"\n",(0,l.jsx)("a",{name:"FileIndex"}),"\n",(0,l.jsx)(n.h2,{id:"fileindex",children:"FileIndex"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": global class"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#FileIndex",children:"FileIndex"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#FileIndex+clear",children:".clear()"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#FileIndex+doNotRemoveFromIndex",children:".doNotRemoveFromIndex()"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#FileIndex+visitAll",children:".visitAll(Called)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#FileIndex+addEntry",children:".addEntry(entry)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#FileIndex+removeEntry",children:".removeEntry(entry)"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.a,{href:"#FileIndex+entryRenamed",children:".entryRenamed(oldPath, newPath, isDirectory)"})}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.a,{href:"#FileIndex+getEntry",children:".getEntry(path)"})," \u21d2 ",(0,l.jsx)("code",{children:"File"})," | ",(0,l.jsx)("code",{children:"Directory"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)("a",{name:"FileIndex+clear"}),"\n",(0,l.jsx)(n.h3,{id:"fileindexclear",children:"fileIndex.clear()"}),"\n",(0,l.jsx)(n.p,{children:"Clear the file index cache."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})})]}),"\n",(0,l.jsx)("a",{name:"FileIndex+doNotRemoveFromIndex"}),"\n",(0,l.jsx)(n.h3,{id:"fileindexdonotremovefromindex",children:"fileIndex.doNotRemoveFromIndex()"}),"\n",(0,l.jsx)(n.p,{children:"Will prevent the file from being removed from index. However, it is reset when index is cleared."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})})]}),"\n",(0,l.jsx)("a",{name:"FileIndex+visitAll"}),"\n",(0,l.jsx)(n.h3,{id:"fileindexvisitallcalled",children:"fileIndex.visitAll(Called)"}),"\n",(0,l.jsx)(n.p,{children:"Visits every entry in the entire index; no stopping condition."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Param"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"Called"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"function"})}),(0,l.jsx)(n.td,{children:"with an entry and its fullPath"})]})})]}),"\n",(0,l.jsx)("a",{name:"FileIndex+addEntry"}),"\n",(0,l.jsx)(n.h3,{id:"fileindexaddentryentry",children:"fileIndex.addEntry(entry)"}),"\n",(0,l.jsx)(n.p,{children:"Add an entry."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Param"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"entry"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"FileSystemEntry"})}),(0,l.jsx)(n.td,{children:"The entry to add."})]})})]}),"\n",(0,l.jsx)("a",{name:"FileIndex+removeEntry"}),"\n",(0,l.jsx)(n.h3,{id:"fileindexremoveentryentry",children:"fileIndex.removeEntry(entry)"}),"\n",(0,l.jsx)(n.p,{children:"Remove an entry."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Param"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"entry"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"FileSystemEntry"})}),(0,l.jsx)(n.td,{children:"The entry to remove."})]})})]}),"\n",(0,l.jsx)("a",{name:"FileIndex+entryRenamed"}),"\n",(0,l.jsx)(n.h3,{id:"fileindexentryrenamedoldpath-newpath-isdirectory",children:"fileIndex.entryRenamed(oldPath, newPath, isDirectory)"}),"\n",(0,l.jsx)(n.p,{children:"Notify the index that an entry has been renamed. This updates\nall affected entries in the index."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})})]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Param"}),(0,l.jsx)(n.th,{children:"Type"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"oldPath"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"string"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"newPath"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"string"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"isDirectory"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"boolean"})})]})]})]}),"\n",(0,l.jsx)("a",{name:"FileIndex+getEntry"}),"\n",(0,l.jsxs)(n.h3,{id:"fileindexgetentrypath--file--directory",children:["fileIndex.getEntry(path) \u21d2 ",(0,l.jsx)("code",{children:"File"})," | ",(0,l.jsx)("code",{children:"Directory"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns the cached entry for the specified path, or undefined\nif the path has not been cached."}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,l.jsx)(n.a,{href:"#FileIndex",children:(0,l.jsx)("code",{children:"FileIndex"})}),(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.strong,{children:"Returns"}),": ",(0,l.jsx)("code",{children:"File"})," | ",(0,l.jsx)("code",{children:"Directory"})," - The entry for the path, or undefined if it hasn't\nbeen cached yet."]}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Param"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:"path"}),(0,l.jsx)(n.td,{children:(0,l.jsx)("code",{children:"string"})}),(0,l.jsx)(n.td,{children:"The path of the entry to return."})]})})]}),"\n",(0,l.jsx)("a",{name:"FileUtils"}),"\n",(0,l.jsx)(n.h2,{id:"fileutils",children:"FileUtils"}),"\n",(0,l.jsx)(n.p,{children:"FileIndex is an internal module used by FileSystem to maintain an index of all files and directories."}),"\n",(0,l.jsxs)(n.p,{children:["This module is ",(0,l.jsx)(n.em,{children:"only"})," used by FileSystem, and should not be called directly."]}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Kind"}),": global variable"]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(x,{...e})}):x(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>s});var d=i(96540);const l={},r=d.createContext(l);function t(e){const n=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),d.createElement(r.Provider,{value:n},e.children)}}}]);