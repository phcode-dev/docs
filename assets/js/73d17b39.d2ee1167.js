"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[339],{6734:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=t(74848),s=t(28453);const r={},c=void 0,l={id:"API-Reference/language/JSUtils",title:"JSUtils",description:"Import :",source:"@site/api/API-Reference/language/JSUtils.md",sourceDirName:"API-Reference/language",slug:"/API-Reference/language/JSUtils",permalink:"/api/API-Reference/language/JSUtils",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JSONUtils",permalink:"/api/API-Reference/language/JSONUtils"},next:{title:"LanguageManager",permalink:"/api/API-Reference/language/LanguageManager"}},o={},d=[{value:"Import :",id:"import-",level:3},{value:"_",id:"_",level:2},{value:"_changedDocumentTracker : <code>ChangedDocumentTracker</code>",id:"_changeddocumenttracker--changeddocumenttracker",level:2},{value:"_shouldGetFromCache(fileInfo) \u21d2 <code>$.Promise</code>",id:"_shouldgetfromcachefileinfo--promise",level:2},{value:"_getFunctionsForFile(fileInfo) \u21d2 <code>$.Promise</code>",id:"_getfunctionsforfilefileinfo--promise",level:2},{value:"findMatchingFunctions(functionName, fileInfos, [keepAllFiles]) \u21d2 <code>$.Promise</code>",id:"findmatchingfunctionsfunctionname-fileinfos-keepallfiles--promise",level:2},{value:"findAllMatchingFunctionsInText(text, searchName) \u21d2 <code>Object</code>",id:"findallmatchingfunctionsintexttext-searchname--object",level:2}];function a(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'const JSUtils = brackets.getModule("language/JSUtils")\n'})}),"\n",(0,i.jsx)("a",{name:"_"}),"\n",(0,i.jsx)(n.h2,{id:"_",children:"_"}),"\n",(0,i.jsx)(n.p,{children:"Set of utilities for simple parsing of JS text."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,i.jsx)("a",{name:"_changedDocumentTracker"}),"\n",(0,i.jsxs)(n.h2,{id:"_changeddocumenttracker--changeddocumenttracker",children:["_changedDocumentTracker : ",(0,i.jsx)("code",{children:"ChangedDocumentTracker"})]}),"\n",(0,i.jsx)(n.p,{children:"Tracks dirty documents between invocations of findMatchingFunctions."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,i.jsx)("a",{name:"_shouldGetFromCache"}),"\n",(0,i.jsxs)(n.h2,{id:"_shouldgetfromcachefileinfo--promise",children:["_shouldGetFromCache(fileInfo) \u21d2 ",(0,i.jsx)("code",{children:"$.Promise"})]}),"\n",(0,i.jsx)(n.p,{children:"Determines if the document function cache is up to date."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global function",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"$.Promise"})," - A promise resolved with true with true when a function cache is available for the document. Resolves\rwith false when there is no cache or the cache is stale."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"fileInfo"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"FileInfo"})})]})})]}),"\n",(0,i.jsx)("a",{name:"_getFunctionsForFile"}),"\n",(0,i.jsxs)(n.h2,{id:"_getfunctionsforfilefileinfo--promise",children:["_getFunctionsForFile(fileInfo) \u21d2 ",(0,i.jsx)("code",{children:"$.Promise"})]}),"\n",(0,i.jsx)(n.p,{children:"Resolves with a record containing the Document or FileInfo and an Array of all\rfunction names with offsets for the specified file. Results may be cached."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global function",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"$.Promise"})," - A promise resolved with a document info object that\rcontains a map of all function names from the document and each function's start offset."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"fileInfo"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"FileInfo"})})]})})]}),"\n",(0,i.jsx)("a",{name:"findMatchingFunctions"}),"\n",(0,i.jsxs)(n.h2,{id:"findmatchingfunctionsfunctionname-fileinfos-keepallfiles--promise",children:["findMatchingFunctions(functionName, fileInfos, [keepAllFiles]) \u21d2 ",(0,i.jsx)("code",{children:"$.Promise"})]}),"\n",(0,i.jsx)(n.p,{children:"Return all functions that have the specified name, searching across all the given files."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global function",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"$.Promise"})," - that will be resolved with an Array of objects containing the\rsource document, start line, and end line (0-based, inclusive range) for each matching function list.\rDoes not addRef() the documents returned in the array."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"functionName"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"String"})}),(0,i.jsx)(n.td,{children:"The name to match."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"fileInfos"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"Array.<File>"})}),(0,i.jsx)(n.td,{children:"The array of files to search."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"[keepAllFiles]"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"boolean"})}),(0,i.jsx)(n.td,{children:"If true, don't ignore non-javascript files."})]})]})]}),"\n",(0,i.jsx)("a",{name:"findAllMatchingFunctionsInText"}),"\n",(0,i.jsxs)(n.h2,{id:"findallmatchingfunctionsintexttext-searchname--object",children:["findAllMatchingFunctionsInText(text, searchName) \u21d2 ",(0,i.jsx)("code",{children:"Object"})]}),"\n",(0,i.jsx)(n.p,{children:'Finds all instances of the specified searchName in "text".\rReturns an Array of Objects with start and end properties.'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Kind"}),": global function",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.strong,{children:"Returns"}),": ",(0,i.jsx)("code",{children:"Object"})," - Array of objects containing the start offset for each matched function name."]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Param"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"text"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"String"})}),(0,i.jsx)(n.td,{children:"JS text to search"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"searchName"}),(0,i.jsx)(n.td,{children:(0,i.jsx)("code",{children:"String"})}),(0,i.jsx)(n.td,{children:"function name to search for"})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var i=t(96540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);