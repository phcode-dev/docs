"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3875],{3255:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=a(74848),i=a(28453);const r={},d=void 0,l={id:"API-Reference/language/LanguageManager",title:"LanguageManager",description:"Import :",source:"@site/api/API-Reference/language/LanguageManager.md",sourceDirName:"API-Reference/language",slug:"/API-Reference/language/LanguageManager",permalink:"/api/API-Reference/language/LanguageManager",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JSUtils",permalink:"/api/API-Reference/language/JSUtils"},next:{title:"XMLUtils",permalink:"/api/API-Reference/language/XMLUtils"}},t={},o=[{value:"Import :",id:"import-",level:3},{value:"Language",id:"language",level:2},{value:"new Language()",id:"new-language",level:3},{value:"language._id : <code>string</code>",id:"language_id--string",level:3},{value:"language._name : <code>string</code>",id:"language_name--string",level:3},{value:"language._mode : <code>string</code>",id:"language_mode--string",level:3},{value:"language._fileExtensions : <code>Array.&lt;string&gt;</code>",id:"language_fileextensions--arraystring",level:3},{value:"language._fileNames : <code>Array.&lt;string&gt;</code>",id:"language_filenames--arraystring",level:3},{value:"language._lineCommentSyntax : <code>Array.&lt;string&gt;</code>",id:"language_linecommentsyntax--arraystring",level:3},{value:"language._modeToLanguageMap : <code>Object.&lt;string, Language&gt;</code>",id:"language_modetolanguagemap--objectstring-language",level:3},{value:"language._blockCommentSyntax : <code>Object</code>",id:"language_blockcommentsyntax--object",level:3},{value:"language._isBinary : <code>boolean</code>",id:"language_isbinary--boolean",level:3},{value:"language.getId() \u21d2 <code>string</code>",id:"languagegetid--string",level:3},{value:"language._setId(id) \u21d2 <code>boolean</code>",id:"language_setidid--boolean",level:3},{value:"language.getName() \u21d2 <code>string</code>",id:"languagegetname--string",level:3},{value:"language._setName(name) \u21d2 <code>boolean</code>",id:"language_setnamename--boolean",level:3},{value:"language.getMode() \u21d2 <code>string</code>",id:"languagegetmode--string",level:3},{value:"language._loadAndSetMode(mode) \u21d2 <code>$.Promise</code>",id:"language_loadandsetmodemode--promise",level:3},{value:"language.getFileExtensions() \u21d2 <code>Array.&lt;string&gt;</code>",id:"languagegetfileextensions--arraystring",level:3},{value:"language.getFileNames() \u21d2 <code>Array.&lt;string&gt;</code>",id:"languagegetfilenames--arraystring",level:3},{value:"language.addFileExtension(extension)",id:"languageaddfileextensionextension",level:3},{value:"language.removeFileExtension(extension)",id:"languageremovefileextensionextension",level:3},{value:"language.addFileName(extension)",id:"languageaddfilenameextension",level:3},{value:"language.removeFileName(extension)",id:"languageremovefilenameextension",level:3},{value:"language.hasLineCommentSyntax() \u21d2 <code>boolean</code>",id:"languagehaslinecommentsyntax--boolean",level:3},{value:"language.getLineCommentPrefixes() \u21d2 <code>Array.&lt;string&gt;</code>",id:"languagegetlinecommentprefixes--arraystring",level:3},{value:"language.setLineCommentSyntax(prefix) \u21d2 <code>boolean</code>",id:"languagesetlinecommentsyntaxprefix--boolean",level:3},{value:"language.hasBlockCommentSyntax() \u21d2 <code>boolean</code>",id:"languagehasblockcommentsyntax--boolean",level:3},{value:"language.getBlockCommentPrefix() \u21d2 <code>string</code>",id:"languagegetblockcommentprefix--string",level:3},{value:"language.getBlockCommentSuffix() \u21d2 <code>string</code>",id:"languagegetblockcommentsuffix--string",level:3},{value:"language.setBlockCommentSyntax(prefix, suffix) \u21d2 <code>boolean</code>",id:"languagesetblockcommentsyntaxprefix-suffix--boolean",level:3},{value:"language.getLanguageForMode(mode) \u21d2 <code>Language</code>",id:"languagegetlanguageformodemode--language",level:3},{value:"language.isFallbackLanguage() \u21d2 <code>boolean</code>",id:"languageisfallbacklanguage--boolean",level:3},{value:"language.isBinary() \u21d2 <code>boolean</code>",id:"languageisbinary--boolean",level:3},{value:"language._setBinary(isBinary)",id:"language_setbinaryisbinary",level:3},{value:"_validateNonEmptyString(value, description, deferred) \u21d2 <code>boolean</code>",id:"_validatenonemptystringvalue-description-deferred--boolean",level:2},{value:"_patchCodeMirror()",id:"_patchcodemirror",level:2},{value:"_setLanguageForMode(mode, language)",id:"_setlanguageformodemode-language",level:2},{value:"getLanguage(id) \u21d2 <code>Language</code>",id:"getlanguageid--language",level:2},{value:"getLanguageForExtension(extension) \u21d2 <code>Language</code>",id:"getlanguageforextensionextension--language",level:2},{value:"getLanguageForPath(path, [ignoreOverride]) \u21d2 <code>Language</code>",id:"getlanguageforpathpath-ignoreoverride--language",level:2},{value:"getLanguages() \u21d2 <code>Object.&lt;string, Language&gt;</code>",id:"getlanguages--objectstring-language",level:2},{value:"_getLanguageForMode(mode) \u21d2 <code>Language</code>",id:"_getlanguageformodemode--language",level:2},{value:"setLanguageOverrideForPath(fullPath, language)",id:"setlanguageoverrideforpathfullpath-language",level:2},{value:"_resetPathLanguageOverrides()",id:"_resetpathlanguageoverrides",level:2},{value:"getCompoundFileExtension(fullPath) \u21d2 <code>string</code>",id:"getcompoundfileextensionfullpath--string",level:2},{value:"defineLanguage(id, definition) \u21d2 <code>$.Promise</code>",id:"definelanguageid-definition--promise",level:2}];function g(e){const n={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const LanguageManager = brackets.getModule("language/LanguageManager")\n'})}),"\n",(0,s.jsx)("a",{name:"Language"}),"\n",(0,s.jsx)(n.h2,{id:"language",children:"Language"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global class"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language",children:"Language"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#new_Language_new",children:"new Language()"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_id",children:"._id"})," : ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_name",children:"._name"})," : ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_mode",children:"._mode"})," : ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_fileExtensions",children:"._fileExtensions"})," : ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_fileNames",children:"._fileNames"})," : ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_lineCommentSyntax",children:"._lineCommentSyntax"})," : ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_modeToLanguageMap",children:"._modeToLanguageMap"})," : ",(0,s.jsx)("code",{children:"Object.<string, Language>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_blockCommentSyntax",children:"._blockCommentSyntax"})," : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_isBinary",children:"._isBinary"})," : ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getId",children:".getId()"})," \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_setId",children:"._setId(id)"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getName",children:".getName()"})," \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_setName",children:"._setName(name)"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getMode",children:".getMode()"})," \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+_loadAndSetMode",children:"._loadAndSetMode(mode)"})," \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getFileExtensions",children:".getFileExtensions()"})," \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getFileNames",children:".getFileNames()"})," \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#Language+addFileExtension",children:".addFileExtension(extension)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#Language+removeFileExtension",children:".removeFileExtension(extension)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#Language+addFileName",children:".addFileName(extension)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#Language+removeFileName",children:".removeFileName(extension)"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+hasLineCommentSyntax",children:".hasLineCommentSyntax()"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getLineCommentPrefixes",children:".getLineCommentPrefixes()"})," \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+setLineCommentSyntax",children:".setLineCommentSyntax(prefix)"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+hasBlockCommentSyntax",children:".hasBlockCommentSyntax()"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getBlockCommentPrefix",children:".getBlockCommentPrefix()"})," \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getBlockCommentSuffix",children:".getBlockCommentSuffix()"})," \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+setBlockCommentSyntax",children:".setBlockCommentSyntax(prefix, suffix)"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+getLanguageForMode",children:".getLanguageForMode(mode)"})," \u21d2 ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+isFallbackLanguage",children:".isFallbackLanguage()"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#Language+isBinary",children:".isBinary()"})," \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#Language+_setBinary",children:"._setBinary(isBinary)"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("a",{name:"new_Language_new"}),"\n",(0,s.jsx)(n.h3,{id:"new-language",children:"new Language()"}),"\n",(0,s.jsx)(n.p,{children:"Model for a language."}),"\n",(0,s.jsx)("a",{name:"Language+_id"}),"\n",(0,s.jsxs)(n.h3,{id:"language_id--string",children:["language._id : ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Identifier for this language"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_name"}),"\n",(0,s.jsxs)(n.h3,{id:"language_name--string",children:["language._name : ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Human-readable name of this language"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_mode"}),"\n",(0,s.jsxs)(n.h3,{id:"language_mode--string",children:["language._mode : ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"CodeMirror mode for this language"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_fileExtensions"}),"\n",(0,s.jsxs)(n.h3,{id:"language_fileextensions--arraystring",children:["language._fileExtensions : ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.p,{children:"File extensions that use this language"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_fileNames"}),"\n",(0,s.jsxs)(n.h3,{id:"language_filenames--arraystring",children:["language._fileNames : ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.p,{children:"File names for extensionless files that use this language"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_lineCommentSyntax"}),"\n",(0,s.jsxs)(n.h3,{id:"language_linecommentsyntax--arraystring",children:["language._lineCommentSyntax : ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.p,{children:"Line comment syntax"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_modeToLanguageMap"}),"\n",(0,s.jsxs)(n.h3,{id:"language_modetolanguagemap--objectstring-language",children:["language._modeToLanguageMap : ",(0,s.jsx)("code",{children:"Object.<string, Language>"})]}),"\n",(0,s.jsx)(n.p,{children:"Which language to use for what CodeMirror mode"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_blockCommentSyntax"}),"\n",(0,s.jsxs)(n.h3,{id:"language_blockcommentsyntax--object",children:["language._blockCommentSyntax : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(n.p,{children:"Block comment syntax"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_isBinary"}),"\n",(0,s.jsxs)(n.h3,{id:"language_isbinary--boolean",children:["language._isBinary : ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Whether or not the language is binary"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+getId"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetid--string",children:["language.getId() \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns the identifier for this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"string"})," - The identifier"]}),"\n",(0,s.jsx)("a",{name:"Language+_setId"}),"\n",(0,s.jsxs)(n.h3,{id:"language_setidid--boolean",children:["language._setId(id) \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the identifier for this language or prints an error to the console."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - Whether the ID was valid and set or not"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"id"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Identifier for this language: lowercase letters, digits, and _ separators (e.g. "cpp", "foo_bar", "c99")'})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+getName"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetname--string",children:["language.getName() \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns the human-readable name of this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"string"})," - The name"]}),"\n",(0,s.jsx)("a",{name:"Language+_setName"}),"\n",(0,s.jsxs)(n.h3,{id:"language_setnamename--boolean",children:["language._setName(name) \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the human-readable name of this language or prints an error to the console."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - Whether the name was valid and set or not"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"name"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Human-readable name of the language, as it\'s commonly referred to (e.g. "C++")'})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+getMode"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetmode--string",children:["language.getMode() \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns the CodeMirror mode for this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"string"})," - The mode"]}),"\n",(0,s.jsx)("a",{name:"Language+_loadAndSetMode"}),"\n",(0,s.jsxs)(n.h3,{id:"language_loadandsetmodemode--promise",children:["language._loadAndSetMode(mode) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Loads a mode and sets it for this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that will be resolved when the mode is loaded and set"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"mode"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:'CodeMirror mode (e.g. "htmlmixed"), optionally paired with a MIME mode defined by      that mode (e.g. ["clike", "text/x-c++src"]). Unless the mode is located in thirdparty/CodeMirror/mode/"name"/"name".js,      you need to first load it yourself.'})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+getFileExtensions"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetfileextensions--arraystring",children:["language.getFileExtensions() \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of file extensions for this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Array.<string>"})," - File extensions used by this language"]}),"\n",(0,s.jsx)("a",{name:"Language+getFileNames"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetfilenames--arraystring",children:["language.getFileNames() \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of file names for extensionless files that use this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Array.<string>"})," - Extensionless file names used by this language"]}),"\n",(0,s.jsx)("a",{name:"Language+addFileExtension"}),"\n",(0,s.jsx)(n.h3,{id:"languageaddfileextensionextension",children:"language.addFileExtension(extension)"}),"\n",(0,s.jsx)(n.p,{children:"Adds one or more file extensions to this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"extension"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:"A file extension (or array thereof) used by this language"})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+removeFileExtension"}),"\n",(0,s.jsx)(n.h3,{id:"languageremovefileextensionextension",children:"language.removeFileExtension(extension)"}),"\n",(0,s.jsx)(n.p,{children:"Unregisters one or more file extensions from this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"extension"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:"File extension (or array thereof) to stop using for this language"})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+addFileName"}),"\n",(0,s.jsx)(n.h3,{id:"languageaddfilenameextension",children:"language.addFileName(extension)"}),"\n",(0,s.jsx)(n.p,{children:'Adds one or more file names to the language which is used to match files that don\'t have extensions like "Makefile" for example.'}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"extension"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:"An extensionless file name (or array thereof) used by this language"})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+removeFileName"}),"\n",(0,s.jsx)(n.h3,{id:"languageremovefilenameextension",children:"language.removeFileName(extension)"}),"\n",(0,s.jsx)(n.p,{children:"Unregisters one or more file names from this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"extension"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:"An extensionless file name (or array thereof) used by this language"})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+hasLineCommentSyntax"}),"\n",(0,s.jsxs)(n.h3,{id:"languagehaslinecommentsyntax--boolean",children:["language.hasLineCommentSyntax() \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns whether the line comment syntax is defined for this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - Whether line comments are supported"]}),"\n",(0,s.jsx)("a",{name:"Language+getLineCommentPrefixes"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetlinecommentprefixes--arraystring",children:["language.getLineCommentPrefixes() \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of prefixes to use for line comments."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Array.<string>"})," - The prefixes"]}),"\n",(0,s.jsx)("a",{name:"Language+setLineCommentSyntax"}),"\n",(0,s.jsxs)(n.h3,{id:"languagesetlinecommentsyntaxprefix--boolean",children:["language.setLineCommentSyntax(prefix) \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the prefixes to use for line comments in this language or prints an error to the console."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - Whether the syntax was valid and set or not"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"prefix"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:'Prefix string or an array of prefix strings   to use for line comments (e.g. "//" or ["//", "#"])'})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+hasBlockCommentSyntax"}),"\n",(0,s.jsxs)(n.h3,{id:"languagehasblockcommentsyntax--boolean",children:["language.hasBlockCommentSyntax() \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns whether the block comment syntax is defined for this language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - Whether block comments are supported"]}),"\n",(0,s.jsx)("a",{name:"Language+getBlockCommentPrefix"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetblockcommentprefix--string",children:["language.getBlockCommentPrefix() \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns the prefix to use for block comments."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"string"})," - The prefix"]}),"\n",(0,s.jsx)("a",{name:"Language+getBlockCommentSuffix"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetblockcommentsuffix--string",children:["language.getBlockCommentSuffix() \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns the suffix to use for block comments."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"string"})," - The suffix"]}),"\n",(0,s.jsx)("a",{name:"Language+setBlockCommentSyntax"}),"\n",(0,s.jsxs)(n.h3,{id:"languagesetblockcommentsyntaxprefix-suffix--boolean",children:["language.setBlockCommentSyntax(prefix, suffix) \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Sets the prefix and suffix to use for blocks comments in this language or prints an error to the console."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - Whether the syntax was valid and set or not"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"prefix"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Prefix string to use for block comments (e.g. "< !--")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"suffix"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Suffix string to use for block comments (e.g. "--\x3e")'})]})]})]}),"\n",(0,s.jsx)("a",{name:"Language+getLanguageForMode"}),"\n",(0,s.jsxs)(n.h3,{id:"languagegetlanguageformodemode--language",children:["language.getLanguageForMode(mode) \u21d2 ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)(n.p,{children:"Returns either a language associated with the mode or the fallback language.\rUsed to disambiguate modes used by multiple languages."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})," - This language if it uses the mode, or whatever ",(0,s.jsx)(n.a,{href:"#_getLanguageForMode",children:"#_getLanguageForMode"})," returns"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"mode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"The mode to associate the language with"})]})})]}),"\n",(0,s.jsx)("a",{name:"Language+isFallbackLanguage"}),"\n",(0,s.jsxs)(n.h3,{id:"languageisfallbacklanguage--boolean",children:["language.isFallbackLanguage() \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Determines whether this is the fallback language or not"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - True if this is the fallback language, false otherwise"]}),"\n",(0,s.jsx)("a",{name:"Language+isBinary"}),"\n",(0,s.jsxs)(n.h3,{id:"languageisbinary--boolean",children:["language.isBinary() \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Indicates whether or not the language is binary (e.g., image or audio)."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)("a",{name:"Language+_setBinary"}),"\n",(0,s.jsx)(n.h3,{id:"language_setbinaryisbinary",children:"language._setBinary(isBinary)"}),"\n",(0,s.jsx)(n.p,{children:"Sets whether or not the language is binary"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"isBinary"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"boolean"})})]})})]}),"\n",(0,s.jsx)("a",{name:"_validateNonEmptyString"}),"\n",(0,s.jsxs)(n.h2,{id:"_validatenonemptystringvalue-description-deferred--boolean",children:["_validateNonEmptyString(value, description, deferred) \u21d2 ",(0,s.jsx)("code",{children:"boolean"})]}),"\n",(0,s.jsx)(n.p,{children:"Checks whether value is a non-empty string. Reports an error otherwise.\rIf no deferred is passed, console.error is called.\rOtherwise the deferred is rejected with the error message."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"boolean"})," - True if the value is a non-empty string, false otherwise"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"value"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"*"})}),(0,s.jsx)(n.td,{children:"The value to validate"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"description"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"A helpful identifier for value"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"deferred"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"jQuery.Deferred"})}),(0,s.jsx)(n.td,{children:"A deferred to reject with the error message in case of an error"})]})]})]}),"\n",(0,s.jsx)("a",{name:"_patchCodeMirror"}),"\n",(0,s.jsx)(n.h2,{id:"_patchcodemirror",children:"_patchCodeMirror()"}),"\n",(0,s.jsx)(n.p,{children:"Monkey-patch CodeMirror to prevent modes from being overwritten by extensions.\rWe may rely on the tokens provided by some of these modes."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"_setLanguageForMode"}),"\n",(0,s.jsx)(n.h2,{id:"_setlanguageformodemode-language",children:"_setLanguageForMode(mode, language)"}),"\n",(0,s.jsx)(n.p,{children:"Adds a global mode-to-language association."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"mode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"The mode to associate the language with"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"language"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})}),(0,s.jsx)(n.td,{children:"The language to associate with the mode"})]})]})]}),"\n",(0,s.jsx)("a",{name:"getLanguage"}),"\n",(0,s.jsxs)(n.h2,{id:"getlanguageid--language",children:["getLanguage(id) \u21d2 ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)(n.p,{children:"Resolves a language ID to a Language object.\rFile names have a higher priority than file extensions."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})," - The language with the provided identifier or undefined"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"id"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Identifier for this language: lowercase letters, digits, and _ separators (e.g. "cpp", "foo_bar", "c99")'})]})})]}),"\n",(0,s.jsx)("a",{name:"getLanguageForExtension"}),"\n",(0,s.jsxs)(n.h2,{id:"getlanguageforextensionextension--language",children:["getLanguageForExtension(extension) \u21d2 ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsxs)(n.p,{children:["Resolves a file extension to a Language object.\r",(0,s.jsx)(n.em,{children:"Warning:"})," it is almost always better to use getLanguageForPath(), since Language can depend\ron file name and even full path. Use this API only if no relevant file/path exists."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})," - The language for the provided extension or null if none exists"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"extension"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"Extension that language should be resolved for"})]})})]}),"\n",(0,s.jsx)("a",{name:"getLanguageForPath"}),"\n",(0,s.jsxs)(n.h2,{id:"getlanguageforpathpath-ignoreoverride--language",children:["getLanguageForPath(path, [ignoreOverride]) \u21d2 ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)(n.p,{children:"Resolves a file path to a Language object."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})," - The language for the provided file type or the fallback language"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"path"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"Path to the file to find a language for"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"[ignoreOverride]"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(n.td,{children:"If set to true will cause the lookup to ignore any      overrides and return default binding. By default override is not ignored."})]})]})]}),"\n",(0,s.jsx)("a",{name:"getLanguages"}),"\n",(0,s.jsxs)(n.h2,{id:"getlanguages--objectstring-language",children:["getLanguages() \u21d2 ",(0,s.jsx)("code",{children:"Object.<string, Language>"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns a map of all the languages currently defined in the LanguageManager. The key to\rthe map is the language id and the value is the language object."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Object.<string, Language>"})," - A map containing all of the\rlanguages currently defined."]}),"\n",(0,s.jsx)("a",{name:"_getLanguageForMode"}),"\n",(0,s.jsxs)(n.h2,{id:"_getlanguageformodemode--language",children:["_getLanguageForMode(mode) \u21d2 ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})]}),"\n",(0,s.jsx)(n.p,{children:"Resolves a CodeMirror mode to a Language object."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.a,{href:"#Language",children:(0,s.jsx)("code",{children:"Language"})})," - The language for the provided mode or the fallback language"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"mode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"CodeMirror mode"})]})})]}),"\n",(0,s.jsx)("a",{name:"setLanguageOverrideForPath"}),"\n",(0,s.jsx)(n.h2,{id:"setlanguageoverrideforpathfullpath-language",children:"setLanguageOverrideForPath(fullPath, language)"}),"\n",(0,s.jsx)(n.p,{children:"Adds a language mapping for the specified fullPath. If language is falsy (null or undefined), the mapping\ris removed. The override is NOT persisted across Brackets sessions."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"fullPath"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"fullPath"})}),(0,s.jsx)(n.td,{children:"absolute path of the file"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"language"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"object"})}),(0,s.jsx)(n.td,{children:"language to associate the file with or falsy value to remove any existing override"})]})]})]}),"\n",(0,s.jsx)("a",{name:"_resetPathLanguageOverrides"}),"\n",(0,s.jsx)(n.h2,{id:"_resetpathlanguageoverrides",children:"_resetPathLanguageOverrides()"}),"\n",(0,s.jsx)(n.p,{children:"Resets all the language overrides for file paths. Used by unit tests only."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"getCompoundFileExtension"}),"\n",(0,s.jsxs)(n.h2,{id:"getcompoundfileextensionfullpath--string",children:["getCompoundFileExtension(fullPath) \u21d2 ",(0,s.jsx)("code",{children:"string"})]}),"\n",(0,s.jsxs)(n.p,{children:['Get the file extension (excluding ".") given a path OR a bare filename.\rReturns "" for names with no extension.\rIf the only ',(0,s.jsx)(n.code,{children:"."}),' in the file is the first character,\rreturns "" as this is not considered an extension.\rThis method considers known extensions which include ',(0,s.jsx)(n.code,{children:"."})," in them."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"string"})," - Returns the extension of a filename or empty string if\rthe argument is a directory or a filename with no extension"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"fullPath"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:"full path to a file or directory"})]})})]}),"\n",(0,s.jsx)("a",{name:"defineLanguage"}),"\n",(0,s.jsxs)(n.h2,{id:"definelanguageid-definition--promise",children:["defineLanguage(id, definition) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(n.p,{children:"Defines a language."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - A promise object that will be resolved with a Language object"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"id"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Unique identifier for this language: lowercase letters, digits, and _ separators (e.g. "cpp", "foo_bar", "c99")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(n.td,{children:"An object describing the language"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition.name"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(n.td,{children:'Human-readable name of the language, as it\'s commonly referred to (e.g. "C++")'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition.fileExtensions"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(n.td,{children:'List of file extensions used by this language (e.g. ["php", "php3"] or ["coffee.md"] - may contain dots)'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition.fileNames"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(n.td,{children:'List of exact file names (e.g. ["Makefile"] or ["package.json]). Higher precedence than file extension.'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition.blockComment"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(n.td,{children:'Array with two entries defining the block comment prefix and suffix (e.g. ["< !--", "--\x3e"])'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition.lineComment"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:'Line comment prefixes (e.g. "//" or ["//", "#"])'})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"definition.mode"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("code",{children:"string"})," | ",(0,s.jsx)("code",{children:"Array.<string>"})]}),(0,s.jsx)(n.td,{children:'CodeMirror mode (e.g. "htmlmixed"), optionally with a MIME mode defined by that mode ["clike", "text/x-c++src"]                                                          Unless the mode is located in thirdparty/CodeMirror/mode/"name"/"name".js, you need to first load it yourself.'})]})]})]})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>d,x:()=>l});var s=a(96540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);