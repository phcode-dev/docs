"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3199],{92657:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"API-Reference/widgets/PopUpManager","title":"PopUpManager","description":"Import :","source":"@site/api/API-Reference/widgets/PopUpManager.md","sourceDirName":"API-Reference/widgets","slug":"/API-Reference/widgets/PopUpManager","permalink":"/api/API-Reference/widgets/PopUpManager","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"NotificationUI","permalink":"/api/API-Reference/widgets/NotificationUI"},"next":{"title":"StatusBar","permalink":"/api/API-Reference/widgets/StatusBar"}}');var s=t(74848),i=t(28453);const o={},d=void 0,p={},l=[{value:"Import :",id:"import-",level:3},{value:"AppInit",id:"appinit",level:2},{value:"addPopUp($popUp, removeHandler, autoRemove, options)",id:"addpopuppopup-removehandler-autoremove-options",level:2},{value:"removePopUp($popUp)",id:"removepopuppopup",level:2},{value:"_filterDropdown($popup, searchString)",id:"_filterdropdownpopup-searchstring",level:2},{value:"selectNextItem(direction, $popUp)",id:"selectnextitemdirection-popup",level:2},{value:"listenToContextMenu(contextMenu)",id:"listentocontextmenucontextmenu",level:2}];function c(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const PopUpManager = brackets.getModule("widgets/PopUpManager")\n'})}),"\n",(0,s.jsx)("a",{name:"AppInit"}),"\n",(0,s.jsx)(n.h2,{id:"appinit",children:"AppInit"}),"\n",(0,s.jsx)(n.p,{children:"Utilities for managing pop-ups."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,s.jsx)("a",{name:"addPopUp"}),"\n",(0,s.jsx)(n.h2,{id:"addpopuppopup-removehandler-autoremove-options",children:"addPopUp($popUp, removeHandler, autoRemove, options)"}),"\n",(0,s.jsx)(n.p,{children:"Add Esc key handling for a popup DOM element."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$popUp"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"jQuery"})}),(0,s.jsx)(n.td,{children:"jQuery object for the DOM element pop-up"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"removeHandler"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"function"})}),(0,s.jsxs)(n.td,{children:["Pop-up specific remove (e.g. display",":none"," or DOM removal)"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"autoRemove"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"Boolean"})}),(0,s.jsx)(n.td,{children:"Specify true to indicate the PopUpManager should      remove the popup from the _popUps array when the popup is closed. Specify false      when the popup is always persistant in the _popUps array."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"options"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"object"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"[options.popupManagesFocus]"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(n.td,{children:"set to true if the popup manages focus restore on close"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"[options.closeCurrentPopups]"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(n.td,{children:"set to true if you want to dismiss all exiting popups before              adding this. Useful when this should be the only popup visible."})]})]})]}),"\n",(0,s.jsx)("a",{name:"removePopUp"}),"\n",(0,s.jsx)(n.h2,{id:"removepopuppopup",children:"removePopUp($popUp)"}),"\n",(0,s.jsx)(n.p,{children:"Remove Esc key handling for a pop-up. Removes the pop-up from the DOM\rif the pop-up is currently visible and was not originally attached."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$popUp"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"jQuery"})})]})})]}),"\n",(0,s.jsx)("a",{name:"_filterDropdown"}),"\n",(0,s.jsx)(n.h2,{id:"_filterdropdownpopup-searchstring",children:"_filterDropdown($popup, searchString)"}),"\n",(0,s.jsx)(n.p,{children:"hides all elements in popup that doesn't match the given search string, also shows the search bar in popup"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.th,{children:"Param"})})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.td,{children:"$popup"})}),(0,s.jsx)(n.tr,{children:(0,s.jsx)(n.td,{children:"searchString"})})]})]}),"\n",(0,s.jsx)("a",{name:"selectNextItem"}),"\n",(0,s.jsx)(n.h2,{id:"selectnextitemdirection-popup",children:"selectNextItem(direction, $popUp)"}),"\n",(0,s.jsx)(n.p,{children:"Selects the next or previous item in the popup."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"direction"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(n.td,{children:"+1 for next, -1 for prev"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"$popUp"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]})]})]}),"\n",(0,s.jsx)("a",{name:"listenToContextMenu"}),"\n",(0,s.jsx)(n.h2,{id:"listentocontextmenucontextmenu",children:"listenToContextMenu(contextMenu)"}),"\n",(0,s.jsx)(n.p,{children:"Context menus are also created in AppInit.htmlReady(), so they may not\ryet have been created when we get our AppInit.htmlReady() callback, so\rwe provide this method to tell us when to start listening for their events"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Param"}),(0,s.jsx)(n.th,{children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"contextMenu"}),(0,s.jsx)(n.td,{children:(0,s.jsx)("code",{children:"ContextMenu"})})]})})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);