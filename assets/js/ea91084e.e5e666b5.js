"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3134],{63031:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>h,toc:()=>l});var s=t(74848),n=t(28453);const i={},c=void 0,h={id:"API-Reference/utils/StringMatch",title:"StringMatch",description:"Import :",source:"@site/api/API-Reference/utils/StringMatch.md",sourceDirName:"API-Reference/utils",slug:"/API-Reference/utils/StringMatch",permalink:"/api/API-Reference/utils/StringMatch",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Resizer",permalink:"/api/API-Reference/utils/Resizer"},next:{title:"StringUtils",permalink:"/api/API-Reference/utils/StringUtils"}},d={},l=[{value:"Import :",id:"import-",level:3},{value:"SearchResult()",id:"searchresult",level:2},{value:"_computeRangesAndScore(matchList, original, character) \u21d2 <code>Object</code>",id:"_computerangesandscorematchlist-original-character--object",level:2},{value:"_codeHintsRelevanceSort(result, query, [prefixListLower], [maxResults], onlyContiguous) \u21d2 <code>Array</code> | <code>*</code>",id:"_codehintsrelevancesortresult-query-prefixlistlower-maxresults-onlycontiguous--array--",level:2},{value:"multiFieldSort(searchResults, fieldSpec)",id:"multifieldsortsearchresults-fieldspec",level:2},{value:"basicMatchSort()",id:"basicmatchsort",level:2},{value:"codeHintsSort(query, choices, [options]) \u21d2 <code>Array.&lt;string&gt;</code>",id:"codehintssortquery-choices-options--arraystring",level:2},{value:"StringMatcher(options)",id:"stringmatcheroptions",level:2},{value:"stringMatcher._specialsCache : <code>Object</code>",id:"stringmatcher_specialscache--object",level:3},{value:"stringMatcher._noMatchCache : <code>Object</code>",id:"stringmatcher_nomatchcache--object",level:3},{value:"stringMatcher.reset()",id:"stringmatcherreset",level:3},{value:"stringMatcher.match(str, query) \u21d2 <code>Object</code>",id:"stringmatchermatchstr-query--object",level:3}];function o(e){const r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'const StringMatch = brackets.getModule("utils/StringMatch")\n'})}),"\n",(0,s.jsx)("a",{name:"SearchResult"}),"\n",(0,s.jsx)(r.h2,{id:"searchresult",children:"SearchResult()"}),"\n",(0,s.jsx)(r.p,{children:"Object representing a search result with associated metadata (added as extra ad hoc fields)"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"_computeRangesAndScore"}),"\n",(0,s.jsxs)(r.h2,{id:"_computerangesandscorematchlist-original-character--object",children:["_computeRangesAndScore(matchList, original, character) \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Converts a list of matches into a form suitable for returning from stringMatch."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Object"})," - matched ranges and score"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"matchList"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Array.<(SpecialMatch|NormalMatch)>"})}),(0,s.jsx)(r.td,{children:"to convert"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"original"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"character"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"int"})}),(0,s.jsx)(r.td,{children:"index where last segment begins"})]})]})]}),"\n",(0,s.jsx)("a",{name:"_codeHintsRelevanceSort"}),"\n",(0,s.jsxs)(r.h2,{id:"_codehintsrelevancesortresult-query-prefixlistlower-maxresults-onlycontiguous--array--",children:["_codeHintsRelevanceSort(result, query, [prefixListLower], [maxResults], onlyContiguous) \u21d2 ",(0,s.jsx)("code",{children:"Array"})," | ",(0,s.jsx)("code",{children:"*"})]}),"\n",(0,s.jsx)(r.p,{children:"Computes the most relevant ordering for code hints."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Array"})," | ",(0,s.jsx)("code",{children:"*"})," - - The ordered results."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"result"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Array"})}),(0,s.jsx)(r.td,{children:"The array of results to be ordered."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"query"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The query string used for matching."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"[prefixListLower]"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(r.td,{children:"Optional array of result values,          that will rank matching items in the choices to the top          if the query starts with the array. For example, on typing 'b', we have to show          'background-color' at the top. So we pass in [\"background-color\"] as a boost prefix list option           along with other CSS properties that we want to boost in the results."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"[maxResults]"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"Optional maximum number of results to include in the output."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"onlyContiguous"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"If set, will only include contiguous results."})]})]})]}),"\n",(0,s.jsx)("a",{name:"multiFieldSort"}),"\n",(0,s.jsx)(r.h2,{id:"multifieldsortsearchresults-fieldspec",children:"multiFieldSort(searchResults, fieldSpec)"}),"\n",(0,s.jsx)(r.p,{children:'Sorts an array of SearchResult objects on a primary field, followed by secondary fields\rin case of ties. \'fieldSpec\' provides the priority order for fields, where the first entry is the primary field, for example:\rmultiFieldSort(bugList, [ "milestone", "severity" ]);\rWould sort a bug list by milestone, and within each milestone sort bugs by severity.'}),"\n",(0,s.jsx)(r.p,{children:"fieldSpec can also include comparator functions of the form normally used by the sort()\rfunction."}),"\n",(0,s.jsx)(r.p,{children:"Any fields that have a string value are compared case-insensitively. Fields used should be\rpresent on all SearchResult objects (no optional/undefined fields)."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"searchResults"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"#SearchResult",children:(0,s.jsx)("code",{children:"Array.<SearchResult>"})})})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fieldSpec"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Array.<string, function()>"})})]})]})]}),"\n",(0,s.jsx)("a",{name:"basicMatchSort"}),"\n",(0,s.jsx)(r.h2,{id:"basicmatchsort",children:"basicMatchSort()"}),"\n",(0,s.jsx)(r.p,{children:"Sorts search results generated by stringMatch(): results are sorted into several\rtiers based on how well they matched the search query, then sorted alphabetically\rwithin each tier."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"codeHintsSort"}),"\n",(0,s.jsxs)(r.h2,{id:"codehintssortquery-choices-options--arraystring",children:["codeHintsSort(query, choices, [options]) \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(r.p,{children:"Retrieves the matching code hints based on the given query and choices array."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Array.<string>"})," - - An array of matching code hints."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"query"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The search query to match against choices."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"choices"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(r.td,{children:"The list of possible code hints."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"[options]"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"object"})}),(0,s.jsx)(r.td,{children:"An optional object to specify additional search options."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"options.limit"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"Maximum number of results to return"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"options.boostPrefixList"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Array.<string>"})}),(0,s.jsx)(r.td,{children:'Optional, Will rank matching items in the choices to top          if query starts with the array. EG: on typing b, we have to show background-color          to top. So we pass in ["background-color"] as boost prefix option along with other          css properties that we want to boost.'})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"options.onlyContiguous"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"is set, will only include contiguous results."})]})]})]}),"\n",(0,s.jsx)("a",{name:"StringMatcher"}),"\n",(0,s.jsx)(r.h2,{id:"stringmatcheroptions",children:"StringMatcher(options)"}),"\n",(0,s.jsx)(r.p,{children:"A StringMatcher provides an interface to the stringMatch function with built-in\rcaching. You should use a StringMatcher for the lifetime of queries over a\rsingle data set."}),"\n",(0,s.jsx)(r.p,{children:'You are free to store other data on this object to assist in higher-level caching.\r(This object\'s caches are all stored in "_" prefixed properties.)'}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"options"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"to control search behavior.                  preferPrefixMatches puts an exact case-insensitive prefix match ahead of all other matches,                  even short-circuiting the match logic. This option implies segmentedSearch=false.                  segmentedSearch treats segments of the string specially."})]})})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#StringMatcher",children:"StringMatcher(options)"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#StringMatcher+_specialsCache",children:"._specialsCache"})," : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#StringMatcher+_noMatchCache",children:"._noMatchCache"})," : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#StringMatcher+reset",children:".reset()"})}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#StringMatcher+match",children:".match(str, query)"})," \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("a",{name:"StringMatcher+_specialsCache"}),"\n",(0,s.jsxs)(r.h3,{id:"stringmatcher_specialscache--object",children:["stringMatcher._specialsCache : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Map from search-result string to the findSpecialCharacters() result for that string - easy to cache\rsince this info doesn't change as the query changes."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(r.a,{href:"#StringMatcher",children:(0,s.jsx)("code",{children:"StringMatcher"})})]}),"\n",(0,s.jsx)("a",{name:"StringMatcher+_noMatchCache"}),"\n",(0,s.jsxs)(r.h3,{id:"stringmatcher_nomatchcache--object",children:["stringMatcher._noMatchCache : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Set of search-result strings that we know don't match the query _lastQuery - or any other query with\rthat prefix."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(r.a,{href:"#StringMatcher",children:(0,s.jsx)("code",{children:"StringMatcher"})})]}),"\n",(0,s.jsx)("a",{name:"StringMatcher+reset"}),"\n",(0,s.jsx)(r.h3,{id:"stringmatcherreset",children:"stringMatcher.reset()"}),"\n",(0,s.jsx)(r.p,{children:"Clears the caches. Use this in the event that the caches may be invalid."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#StringMatcher",children:(0,s.jsx)("code",{children:"StringMatcher"})})]}),"\n",(0,s.jsx)("a",{name:"StringMatcher+match"}),"\n",(0,s.jsxs)(r.h3,{id:"stringmatchermatchstr-query--object",children:["stringMatcher.match(str, query) \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Performs a single match using the stringMatch function. See stringMatch for full documentation."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#StringMatcher",children:(0,s.jsx)("code",{children:"StringMatcher"})}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Object"})," - matched ranges and score"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"str"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The string to search"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"query"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The query string to find in string"})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>h});var s=t(96540);const n={},i=s.createContext(n);function c(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function h(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);