"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6346],{6307:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"API-Reference/project/SidebarView","title":"SidebarView","description":"Import :","source":"@site/api/API-Reference/project/SidebarView.md","sourceDirName":"API-Reference/project","slug":"/API-Reference/project/SidebarView","permalink":"/api/API-Reference/project/SidebarView","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ProjectModel","permalink":"/api/API-Reference/project/ProjectModel"},"next":{"title":"WorkingSetSort","permalink":"/api/API-Reference/project/WorkingSetSort"}}');var t=i(74848),r=i(28453);const o={},l=void 0,d={},a=[{value:"Import :",id:"import-",level:3},{value:"AppInit",id:"appinit",level:2},{value:"toggle()",id:"toggle",level:2},{value:"show()",id:"show",level:2},{value:"hide()",id:"hide",level:2},{value:"isVisible() \u21d2 <code>boolean</code>",id:"isvisible--boolean",level:2}];function c(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"import-",children:"Import :"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'const SidebarView = brackets.getModule("project/SidebarView")\n'})}),"\n",(0,t.jsx)("a",{name:"AppInit"}),"\n",(0,t.jsx)(n.h2,{id:"appinit",children:"AppInit"}),"\n",(0,t.jsx)(n.p,{children:"The view that controls the showing and hiding of the sidebar."}),"\n",(0,t.jsx)(n.p,{children:"Although the sidebar view doesn't dispatch any events directly, it is a\nresizable element (../utils/Resizer.js), which means it can dispatch Resizer\nevents.  For example, if you want to listen for the sidebar showing\nor hiding itself, set up listeners for the corresponding Resizer events,\npanelCollapsed and panelExpanded:"}),"\n",(0,t.jsx)(n.p,{children:'$("#sidebar").on("panelCollapsed", ...);\n$("#sidebar").on("panelExpanded", ...);'}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global variable"]}),"\n",(0,t.jsx)("a",{name:"toggle"}),"\n",(0,t.jsx)(n.h2,{id:"toggle",children:"toggle()"}),"\n",(0,t.jsx)(n.p,{children:"Toggle sidebar visibility."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,t.jsx)("a",{name:"show"}),"\n",(0,t.jsx)(n.h2,{id:"show",children:"show()"}),"\n",(0,t.jsx)(n.p,{children:"Show the sidebar."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,t.jsx)("a",{name:"hide"}),"\n",(0,t.jsx)(n.h2,{id:"hide",children:"hide()"}),"\n",(0,t.jsx)(n.p,{children:"Hide the sidebar."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global function"]}),"\n",(0,t.jsx)("a",{name:"isVisible"}),"\n",(0,t.jsxs)(n.h2,{id:"isvisible--boolean",children:["isVisible() \u21d2 ",(0,t.jsx)("code",{children:"boolean"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns the visibility state of the sidebar."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Kind"}),": global function",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Returns"}),": ",(0,t.jsx)("code",{children:"boolean"})," - true if element is visible, false if it is not visible"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(96540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);