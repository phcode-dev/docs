"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2422],{18883:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=n(74848),t=n(28453);const i={},d=void 0,l={id:"API-Reference/language/CodeInspection",title:"CodeInspection",description:"Import :",source:"@site/api/API-Reference/language/CodeInspection.md",sourceDirName:"API-Reference/language",slug:"/API-Reference/language/CodeInspection",permalink:"/api/API-Reference/language/CodeInspection",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"CSSUtils",permalink:"/api/API-Reference/language/CSSUtils"},next:{title:"HTMLDOMDiff",permalink:"/api/API-Reference/language/HTMLDOMDiff"}},o={},c=[{value:"Import :",id:"import-",level:3},{value:"_",id:"_",level:2},{value:"Type",id:"type",level:2},{value:"Type.ERROR",id:"typeerror",level:3},{value:"Type.WARNING",id:"typewarning",level:3},{value:"Type.META",id:"typemeta",level:3},{value:"PREF_ENABLED",id:"pref_enabled",level:2},{value:"setGotoEnabled(gotoEnabled)",id:"setgotoenabledgotoenabled",level:2},{value:"getProvidersForPath(filePath) \u21d2 <code>Object</code>",id:"getprovidersforpathfilepath--object",level:2},{value:"getProviderIDsForLanguage(languageId) \u21d2 <code>Array.&lt;string&gt;</code>",id:"getprovideridsforlanguagelanguageid--arraystring",level:2},{value:"inspectFile(file, providerList) \u21d2 <code>$.Promise</code>",id:"inspectfilefile-providerlist--promise",level:2},{value:"updatePanelTitleAndStatusBar(numProblems, Array, aborted, fileName)",id:"updatepaneltitleandstatusbarnumproblems-array-aborted-filename",level:2},{value:"_createMarkerElement(editor, line, ch, type, message, isFixable) \u21d2",id:"_createmarkerelementeditor-line-ch-type-message-isfixable-",level:2},{value:"run(providerName)",id:"runprovidername",level:2},{value:"getProvidersForLanguageId()",id:"getprovidersforlanguageid",level:2},{value:"updateListeners()",id:"updatelisteners",level:2},{value:"toggleEnabled(enabled, doNotSave)",id:"toggleenabledenabled-donotsave",level:2},{value:"toggleCollapsed(collapsed, doNotSave)",id:"togglecollapsedcollapsed-donotsave",level:2},{value:"handleGotoFirstProblem()",id:"handlegotofirstproblem",level:2},{value:"Error : <code>Object</code>",id:"error--object",level:2}];function a(e){const r={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'const CodeInspection = brackets.getModule("language/CodeInspection")\n'})}),"\n",(0,s.jsx)("a",{name:"_"}),"\n",(0,s.jsx)(r.h2,{id:"_",children:"_"}),"\n",(0,s.jsx)(r.p,{children:"Manages linters and other code inspections on a per-language basis. Provides a UI and status indicator for\rthe resulting errors/warnings."}),"\n",(0,s.jsx)(r.p,{children:"Currently, inspection providers are only invoked on the current file and only when it is opened, switched to,\ror saved. But in the future, inspectors may be invoked as part of a global scan, at intervals while typing, etc.\rCurrently, results are only displayed in a bottom panel list and in a status bar icon. But in the future,\rresults may also be displayed inline in the editor (as gutter markers, etc.).\rIn the future, support may also be added for error/warning providers that cannot process a single file at a time\r(e.g. a full-project compiler)."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global constant"]}),"\n",(0,s.jsx)("a",{name:"Type"}),"\n",(0,s.jsx)(r.h2,{id:"type",children:"Type"}),"\n",(0,s.jsx)(r.p,{children:"Values for problem's 'type' property"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global constant"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Type",children:"Type"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#Type.ERROR",children:".ERROR"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#Type.WARNING",children:".WARNING"})}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#Type.META",children:".META"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("a",{name:"Type.ERROR"}),"\n",(0,s.jsx)(r.h3,{id:"typeerror",children:"Type.ERROR"}),"\n",(0,s.jsx)(r.p,{children:"Unambiguous error, such as a syntax error"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": static property of ",(0,s.jsx)(r.a,{href:"#Type",children:(0,s.jsx)("code",{children:"Type"})})]}),"\n",(0,s.jsx)("a",{name:"Type.WARNING"}),"\n",(0,s.jsx)(r.h3,{id:"typewarning",children:"Type.WARNING"}),"\n",(0,s.jsx)(r.p,{children:"Maintainability issue, probable error / bad smell, etc."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": static property of ",(0,s.jsx)(r.a,{href:"#Type",children:(0,s.jsx)("code",{children:"Type"})})]}),"\n",(0,s.jsx)("a",{name:"Type.META"}),"\n",(0,s.jsx)(r.h3,{id:"typemeta",children:"Type.META"}),"\n",(0,s.jsx)(r.p,{children:"Inspector unable to continue, code too complex for static analysis, etc. Not counted in err/warn tally."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": static property of ",(0,s.jsx)(r.a,{href:"#Type",children:(0,s.jsx)("code",{children:"Type"})})]}),"\n",(0,s.jsx)("a",{name:"PREF_ENABLED"}),"\n",(0,s.jsx)(r.h2,{id:"pref_enabled",children:"PREF_ENABLED"}),"\n",(0,s.jsx)(r.p,{children:"Constants for the preferences defined in this file."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global constant"]}),"\n",(0,s.jsx)("a",{name:"setGotoEnabled"}),"\n",(0,s.jsx)(r.h2,{id:"setgotoenabledgotoenabled",children:"setGotoEnabled(gotoEnabled)"}),"\n",(0,s.jsx)(r.p,{children:'Enable or disable the "Go to First Error" command'}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"gotoEnabled"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"Whether it is enabled."})]})})]}),"\n",(0,s.jsx)("a",{name:"getProvidersForPath"}),"\n",(0,s.jsxs)(r.h2,{id:"getprovidersforpathfilepath--object",children:["getProvidersForPath(filePath) \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Returns a list of provider for given file path, if available.\rDecision is made depending on the file extension."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"filePath"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})})]})})]}),"\n",(0,s.jsx)("a",{name:"getProviderIDsForLanguage"}),"\n",(0,s.jsxs)(r.h2,{id:"getprovideridsforlanguagelanguageid--arraystring",children:["getProviderIDsForLanguage(languageId) \u21d2 ",(0,s.jsx)("code",{children:"Array.<string>"})]}),"\n",(0,s.jsx)(r.p,{children:"Returns an array of the IDs of providers registered for a specific language"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Array.<string>"})," - Names of registered providers."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"languageId"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})})]})})]}),"\n",(0,s.jsx)("a",{name:"inspectFile"}),"\n",(0,s.jsxs)(r.h2,{id:"inspectfilefile-providerlist--promise",children:["inspectFile(file, providerList) \u21d2 ",(0,s.jsx)("code",{children:"$.Promise"})]}),"\n",(0,s.jsx)(r.p,{children:"Runs a file inspection over passed file. Uses the given list of providers if specified, otherwise uses\rthe set of providers that are registered for the file's language.\rThis method doesn't update the Brackets UI, just provides inspection results.\rThese results will reflect any unsaved changes present in the file if currently open."}),"\n",(0,s.jsx)(r.p,{children:"The Promise yields an array of provider-result pair objects (the result is the return value of the\rprovider's scanFile() - see register() for details). The result object may be null if there were no\rerrors from that provider.\rIf there are no providers registered for this file, the Promise yields null instead."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"$.Promise"})," - a jQuery promise that will be resolved with ?{provider",":Object",", result: ?{errors:!Array, aborted",":boolean","}}"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"file"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"File"})}),(0,s.jsx)(r.td,{children:"File that will be inspected for errors."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"providerList"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"Array"})]})]})]}),"\n",(0,s.jsx)("a",{name:"updatePanelTitleAndStatusBar"}),"\n",(0,s.jsx)(r.h2,{id:"updatepaneltitleandstatusbarnumproblems-array-aborted-filename",children:"updatePanelTitleAndStatusBar(numProblems, Array, aborted, fileName)"}),"\n",(0,s.jsx)(r.p,{children:"Update the title of the problem panel and the tooltip of the status bar icon. The title and the tooltip will\rchange based on the number of problems reported and how many provider reported problems."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"numProblems"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Number"})}),(0,s.jsx)(r.td,{children:"total number of problems across all providers"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"Array"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"providersReportingProblems - providers that reported problems"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"aborted"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"true if any provider returned a result with the 'aborted' flag set"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fileName"}),(0,s.jsx)(r.td,{}),(0,s.jsx)(r.td,{})]})]})]}),"\n",(0,s.jsx)("a",{name:"_createMarkerElement"}),"\n",(0,s.jsx)(r.h2,{id:"_createmarkerelementeditor-line-ch-type-message-isfixable-",children:"_createMarkerElement(editor, line, ch, type, message, isFixable) \u21d2"}),"\n",(0,s.jsx)(r.p,{children:"It creates a div element with a span element inside it, and then adds a click handler to move cursor to the\rerror position."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": A DOM element."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"editor"}),(0,s.jsx)(r.td,{children:"the editor instance"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"line"}),(0,s.jsx)(r.td,{children:"the line number of the error"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"ch"}),(0,s.jsx)(r.td,{children:"the character position of the error"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"type"}),(0,s.jsx)(r.td,{children:"The type of the marker. This is a string that can be one of the error types"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"message"}),(0,s.jsx)(r.td,{children:"The message that will be displayed when you hover over the marker."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"isFixable"}),(0,s.jsx)(r.td,{children:"true if we need to use the fix icon"})]})]})]}),"\n",(0,s.jsx)("a",{name:"run"}),"\n",(0,s.jsx)(r.h2,{id:"runprovidername",children:"run(providerName)"}),"\n",(0,s.jsx)(r.p,{children:"Run inspector applicable to current document. Updates status bar indicator and refreshes error list in\rbottom panel. Does not run if inspection is disabled or if a providerName is given and does not\rmatch the current doc's provider name."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"providerName"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"name of the provider that is requesting a run"})]})})]}),"\n",(0,s.jsx)("a",{name:"getProvidersForLanguageId"}),"\n",(0,s.jsx)(r.h2,{id:"getprovidersforlanguageid",children:"getProvidersForLanguageId()"}),"\n",(0,s.jsx)(r.p,{children:"Returns a list of providers registered for given languageId through register function"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"updateListeners"}),"\n",(0,s.jsx)(r.h2,{id:"updatelisteners",children:"updateListeners()"}),"\n",(0,s.jsx)(r.p,{children:"Update DocumentManager listeners."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"toggleEnabled"}),"\n",(0,s.jsx)(r.h2,{id:"toggleenabledenabled-donotsave",children:"toggleEnabled(enabled, doNotSave)"}),"\n",(0,s.jsx)(r.p,{children:"Enable or disable all inspection."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"enabled"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"Enabled state. If omitted, the state is toggled."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"doNotSave"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"true if the preference should not be saved to user settings. This is generally for events triggered by project-level settings."})]})]})]}),"\n",(0,s.jsx)("a",{name:"toggleCollapsed"}),"\n",(0,s.jsx)(r.h2,{id:"togglecollapsedcollapsed-donotsave",children:"toggleCollapsed(collapsed, doNotSave)"}),"\n",(0,s.jsx)(r.p,{children:"Toggle the collapsed state for the panel. This explicitly collapses the panel (as opposed to\rthe auto collapse due to files with no errors & filetypes with no provider). When explicitly\rcollapsed, the panel will not reopen automatically on switch files or save."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"collapsed"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"Collapsed state. If omitted, the state is toggled."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"doNotSave"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"true if the preference should not be saved to user settings. This is generally for events triggered by project-level settings."})]})]})]}),"\n",(0,s.jsx)("a",{name:"handleGotoFirstProblem"}),"\n",(0,s.jsx)(r.h2,{id:"handlegotofirstproblem",children:"handleGotoFirstProblem()"}),"\n",(0,s.jsx)(r.p,{children:"Command to go to the first Problem"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global function"]}),"\n",(0,s.jsx)("a",{name:"Error"}),"\n",(0,s.jsxs)(r.h2,{id:"error--object",children:["Error : ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Registers a provider for a specific language to inspect files and provide linting results."}),"\n",(0,s.jsxs)(r.p,{children:["The provider is passed the text of the file and its full path. Providers should not assume that\rthe file is open (i.e., ",(0,s.jsx)(r.code,{children:"DocumentManager.getOpenDocumentForPath()"})," may return ",(0,s.jsx)(r.code,{children:"null"}),") or that the\rfile on disk matches the text given (the file may have unsaved changes)."]}),"\n",(0,s.jsx)(r.p,{children:'Registering any provider for the "javascript" language automatically unregisters the built-in\rBrackets JSLint provider. This is a temporary convenience until a UI exists for disabling\rregistered providers.'}),"\n",(0,s.jsxs)(r.p,{children:["Providers must implement ",(0,s.jsx)(r.code,{children:"canInspect()"}),", ",(0,s.jsx)(r.code,{children:"scanFile()"}),", or ",(0,s.jsx)(r.code,{children:"scanFileAsync()"}),". If both ",(0,s.jsx)(r.code,{children:"scanFile()"}),"\rand ",(0,s.jsx)(r.code,{children:"scanFileAsync()"})," are implemented, ",(0,s.jsx)(r.code,{children:"scanFile()"})," is ignored."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"canInspect(fullPath)"}),": A synchronous call to determine if the file can be scanned by this provider."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"scanFile(text, fullPath)"}),": A synchronous function returning linting results or ",(0,s.jsx)(r.code,{children:"null"}),"."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"scanFileAsync(text, fullPath)"}),": An asynchronous function returning a jQuery Promise resolved with\rthe same type of value as ",(0,s.jsx)(r.code,{children:"scanFile()"}),". Rejecting the promise is treated as an internal error in the provider."]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"Each error object in the results should have the following structure:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'             { pos:{line,ch},\r               endPos:?{line,ch},\r               message:string,\r               htmlMessage:string,\r               type:?Type ,\r               fix: { // an optional fix, if present will show the fix button\r                    replace: "text to replace the offset given below",\r                    rangeOffset: {\r                        start: number,\r                        end: number\r               }}}\n'})}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global typedef"]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"languageId"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The language ID for which the provider is registered."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"provider"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"The provider object."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"provider.name"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The name of the provider."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"provider.scanFile"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"function"})}),(0,s.jsx)(r.td,{children:"Synchronous scan function."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"provider.scanFileAsync"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"function"})}),(0,s.jsx)(r.td,{children:"Asynchronous scan function returning a Promise."})]})]})]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Properties"})}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Name"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"pos"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"The start position of the error."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"pos.line"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"The line number (0-based)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"pos.ch"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"The character position within the line (0-based)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"endPos"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"The end position of the error."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"endPos.line"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"The end line number (0-based)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"endPos.ch"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"The end character position within the line (0-based)."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"message"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The error message to be displayed as text."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"htmlMessage"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The error message to be displayed as HTML."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"type"}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"#Type",children:(0,s.jsx)("code",{children:"Type"})})}),(0,s.jsxs)(r.td,{children:["The type of the error. Defaults to ",(0,s.jsx)(r.code,{children:"Type.WARNING"})," if unspecified."]})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fix"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"An optional fix object."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fix.replace"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The text to replace the error with."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fix.rangeOffset"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"Object"})}),(0,s.jsx)(r.td,{children:"The range within the text to replace."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fix.rangeOffset.start"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsx)(r.td,{children:"The start offset of the range."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fix.rangeOffset.end"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"number"})}),(0,s.jsxs)(r.td,{children:["The end offset of the range. If no errors are found, return either ",(0,s.jsx)(r.code,{children:"null"}),"(treated as file is problem free) or an object with a zero-length ",(0,s.jsx)(r.code,{children:"errors"})," array. Always use ",(0,s.jsx)(r.code,{children:"message"})," to safely display the error as text. If you want to display HTML error message, then explicitly use ",(0,s.jsx)(r.code,{children:"htmlMessage"})," to display it. Both ",(0,s.jsx)(r.code,{children:"message"})," and ",(0,s.jsx)(r.code,{children:"htmlMessage"})," can be used simultaneously. After scanning the file, if you need to omit the lint result, return or resolve with ",(0,s.jsx)(r.code,{children:"{isIgnored: true}"}),". This prevents the file from being marked with a no errors tick mark in the status bar and excludes the linter from the problems panel."]})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>l});var s=n(96540);const t={},i=s.createContext(t);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);