"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5077],{81572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>a,toc:()=>o});var r=n(74848),s=n(28453);const i={},l=void 0,a={id:"API-Reference/filesystem/FileSystem",title:"FileSystem",description:"Import :",source:"@site/api/API-Reference/filesystem/FileSystem.md",sourceDirName:"API-Reference/filesystem",slug:"/API-Reference/filesystem/",permalink:"/api/API-Reference/filesystem/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FileUtils",permalink:"/api/API-Reference/file/FileUtils"},next:{title:"Directory",permalink:"/api/API-Reference/filesystem/Directory"}},d={},o=[{value:"Import :",id:"import-",level:3},{value:"Directory",id:"directory",level:2},{value:"registerProtocolAdapter(protocol, ...adapter)",id:"registerprotocoladapterprotocol-adapter",level:2},{value:"on(event, handler)",id:"onevent-handler",level:2},{value:"off(event, handler)",id:"offevent-handler",level:2}];function h(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h3,{id:"import-",children:"Import :"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:'const FileSystem = brackets.getModule("filesystem/FileSystem")\n'})}),"\n",(0,r.jsx)("a",{name:"Directory"}),"\n",(0,r.jsx)(t.h2,{id:"directory",children:"Directory"}),"\n",(0,r.jsx)(t.p,{children:"FileSystem is a model object representing a complete file system. This object creates\nand manages File and Directory instances, dispatches events when the file system changes,\nand provides methods for showing 'open' and 'save' dialogs."}),"\n",(0,r.jsxs)(t.p,{children:['FileSystem automatically initializes when loaded. It depends on a pluggable "impl" layer, which\nit loads itself but must be designated in the require.config() that loads FileSystem. For details\nsee: ',(0,r.jsx)(t.a,{href:"https://github.com/adobe/brackets/wiki/File-System-Implementations",children:"https://github.com/adobe/brackets/wiki/File-System-Implementations"})]}),"\n",(0,r.jsx)(t.p,{children:"There are three ways to get File or Directory instances:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Use FileSystem.resolve() to convert a path to a File/Directory object. This will only\nsucceed if the file/directory already exists."}),"\n",(0,r.jsx)(t.li,{children:"Use FileSystem.getFileForPath()/FileSystem.getDirectoryForPath() if you know the\nfile/directory already exists, or if you want to create a new entry."}),"\n",(0,r.jsx)(t.li,{children:"Use Directory.getContents() to return all entries for the specified Directory."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["All paths passed ",(0,r.jsx)(t.em,{children:"to"})," FileSystem APIs must be in the following format:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'The path separator is "/" regardless of platform'}),"\n",(0,r.jsx)(t.li,{children:'Paths begin with "/" on Mac/Linux and "c:/" (or some other drive letter) on Windows'}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["All paths returned ",(0,r.jsx)(t.em,{children:"from"})," FileSystem APIs additionally meet the following guarantees:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'No ".." segments'}),"\n",(0,r.jsx)(t.li,{children:'No consecutive "/"s'}),"\n",(0,r.jsxs)(t.li,{children:['Paths to a directory always end with a trailing "/"\n(Because FileSystem normalizes paths automatically, paths passed ',(0,r.jsx)(t.em,{children:"to"})," FileSystem do not need\nto meet these requirements)"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["FileSystem dispatches the following events:\n(NOTE: attach to these events via ",(0,r.jsx)(t.code,{children:"FileSystem.on()"})," - not ",(0,r.jsx)(t.code,{children:"$(FileSystem).on()"}),")"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"change"})," - Sent whenever there is a change in the file system. The handler\nis passed up to three arguments: the changed entry and, if that changed entry\nis a Directory, a list of entries added to the directory and a list of entries\nremoved from the Directory. The entry argument can be:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"a File - the contents of the file have changed, and should be reloaded."}),"\n",(0,r.jsxs)(t.li,{children:['a Directory - an immediate child of the directory has been added, removed,\nor renamed/moved. Not triggered for "grandchildren".',"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"If the added & removed arguments are null, we don't know what was added/removed:\nclients should assume the whole subtree may have changed."}),"\n",(0,r.jsx)(t.li,{children:"If the added & removed arguments are 0-length, there's no net change in the set\nof files but a file may have been replaced: clients should assume the contents\nof any immediate child file may have changed."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"null - a 'wholesale' change happened, and you should assume everything may\nhave changed.\nFor changes made externally, there may be a significant delay before a \"change\" event\nis dispatched."}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"rename"})," - Sent whenever a File or Directory is renamed. All affected File and Directory\nobjects have been updated to reflect the new path by the time this event is dispatched.\nThis event should be used to trigger any UI updates that may need to occur when a path\nhas changed. Note that these events will only be sent for rename operations that happen\nwithin the filesystem. If a file is renamed externally, a change event on the parent\ndirectory will be sent instead."]}),"\n",(0,r.jsx)(t.p,{children:"FileSystem may perform caching. But it guarantees:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"File contents & metadata - reads are guaranteed to be up to date (cached data is not used\nwithout first veryifying it is up to date)."}),"\n",(0,r.jsx)(t.li,{children:"Directory structure / file listing - reads may return cached data immediately, which may not\nreflect external changes made recently. (However, changes made via FileSystem itself are always\nreflected immediately, as soon as the change operation's callback signals success)."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The FileSystem doesn't directly read or write contents--this work is done by a low-level\nimplementation object. This allows client code to use the FileSystem API without having to\nworry about the underlying storage, which could be a local filesystem or a remote server."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Kind"}),": global constant"]}),"\n",(0,r.jsx)("a",{name:"registerProtocolAdapter"}),"\n",(0,r.jsx)(t.h2,{id:"registerprotocoladapterprotocol-adapter",children:"registerProtocolAdapter(protocol, ...adapter)"}),"\n",(0,r.jsx)(t.p,{children:"FileSystem hook to register file protocol adapter"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Kind"}),": global function"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"protocol"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"string"})}),(0,r.jsx)(t.td,{children:'ex: "https:"'})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"...adapter"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.a,{href:"#FileProtocol..Adapter",children:(0,r.jsx)("code",{children:"Adapter"})})}),(0,r.jsx)(t.td,{children:"wrapper over file implementation"})]})]})]}),"\n",(0,r.jsx)("a",{name:"on"}),"\n",(0,r.jsx)(t.h2,{id:"onevent-handler",children:"on(event, handler)"}),"\n",(0,r.jsx)(t.p,{children:"Add an event listener for a FileSystem event."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Kind"}),": global function"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"event"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"string"})}),(0,r.jsx)(t.td,{children:"The name of the event"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"handler"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"function"})}),(0,r.jsx)(t.td,{children:"The handler for the event"})]})]})]}),"\n",(0,r.jsx)("a",{name:"off"}),"\n",(0,r.jsx)(t.h2,{id:"offevent-handler",children:"off(event, handler)"}),"\n",(0,r.jsx)(t.p,{children:"Remove an event listener for a FileSystem event."}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Kind"}),": global function"]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Param"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"event"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"string"})}),(0,r.jsx)(t.td,{children:"The name of the event"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"handler"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("code",{children:"function"})}),(0,r.jsx)(t.td,{children:"The handler for the event"})]})]})]})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var r=n(96540);const s={},i=r.createContext(s);function l(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);