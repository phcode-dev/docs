"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7934],{34952:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=t(74848),n=t(28453);const i={},c=void 0,o={id:"API-Reference/filesystem/Directory",title:"Directory",description:"Import :",source:"@site/api/API-Reference/filesystem/Directory.md",sourceDirName:"API-Reference/filesystem",slug:"/API-Reference/filesystem/Directory",permalink:"/api/API-Reference/filesystem/Directory",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FileSystem",permalink:"/api/API-Reference/filesystem/"},next:{title:"File",permalink:"/api/API-Reference/filesystem/File"}},l={},d=[{value:"Import :",id:"import-",level:3},{value:"Directory",id:"directory",level:2},{value:"new Directory(fullPath, fileSystem)",id:"new-directoryfullpath-filesystem",level:3},{value:"directory._contents : <code>Array.&lt;FileSystemEntry&gt;</code>",id:"directory_contents--arrayfilesystementry",level:3},{value:"directory._contentsStats : <code>Array.&lt;FileSystemStats&gt;</code>",id:"directory_contentsstats--arrayfilesystemstats",level:3},{value:"directory._contentsStatsErrors : <code>Object.&lt;string, string&gt;</code>",id:"directory_contentsstatserrors--objectstring-string",level:3},{value:"directory.isEmptyAsync() \u21d2 <code>Promise.&lt;boolean&gt;</code>",id:"directoryisemptyasync--promiseboolean",level:3},{value:"directory.unlinkEmptyDirectoryAsync() \u21d2 <code>Promise.&lt;void&gt;</code>",id:"directoryunlinkemptydirectoryasync--promisevoid",level:3},{value:"directory.getContentsAsync(filterNothing) \u21d2 <code>Object</code>",id:"directorygetcontentsasyncfilternothing--object",level:3},{value:"directory.getContents(callback, filterNothing)",id:"directorygetcontentscallback-filternothing",level:3},{value:"directory.createAsync() \u21d2 <code>Promise.&lt;FileSystemStats&gt;</code>",id:"directorycreateasync--promisefilesystemstats",level:3},{value:"directory.create([callback])",id:"directorycreatecallback",level:3}];function a(e){const r={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h3,{id:"import-",children:"Import :"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:'const Directory = brackets.getModule("filesystem/Directory")\n'})}),"\n",(0,s.jsx)("a",{name:"Directory"}),"\n",(0,s.jsx)(r.h2,{id:"directory",children:"Directory"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": global class"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory",children:"Directory"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#new_Directory_new",children:"new Directory(fullPath, fileSystem)"})}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+_contents",children:"._contents"})," : ",(0,s.jsx)("code",{children:"Array.<FileSystemEntry>"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+_contentsStats",children:"._contentsStats"})," : ",(0,s.jsx)("code",{children:"Array.<FileSystemStats>"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+_contentsStatsErrors",children:"._contentsStatsErrors"})," : ",(0,s.jsx)("code",{children:"Object.<string, string>"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+isEmptyAsync",children:".isEmptyAsync()"})," \u21d2 ",(0,s.jsx)("code",{children:"Promise.<boolean>"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+unlinkEmptyDirectoryAsync",children:".unlinkEmptyDirectoryAsync()"})," \u21d2 ",(0,s.jsx)("code",{children:"Promise.<void>"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+getContentsAsync",children:".getContentsAsync(filterNothing)"})," \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#Directory+getContents",children:".getContents(callback, filterNothing)"})}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"#Directory+createAsync",children:".createAsync()"})," \u21d2 ",(0,s.jsx)("code",{children:"Promise.<FileSystemStats>"})]}),"\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#Directory+create",children:".create([callback])"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("a",{name:"new_Directory_new"}),"\n",(0,s.jsx)(r.h3,{id:"new-directoryfullpath-filesystem",children:"new Directory(fullPath, fileSystem)"}),"\n",(0,s.jsx)(r.p,{children:"Model for a file system Directory."}),"\n",(0,s.jsxs)(r.p,{children:["This class should ",(0,s.jsx)(r.em,{children:"not"})," be instantiated directly. Use FileSystem.getDirectoryForPath,\rFileSystem.resolve, or Directory.getContents to create an instance of this class."]}),"\n",(0,s.jsx)(r.p,{children:"Note: Directory.fullPath always has a trailing slash."}),"\n",(0,s.jsx)(r.p,{children:"See the FileSystem class for more details."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fullPath"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"string"})}),(0,s.jsx)(r.td,{children:"The full path for this Directory."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"fileSystem"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"FileSystem"})}),(0,s.jsx)(r.td,{children:"The file system associated with this Directory."})]})]})]}),"\n",(0,s.jsx)("a",{name:"Directory+_contents"}),"\n",(0,s.jsxs)(r.h3,{id:"directory_contents--arrayfilesystementry",children:["directory._contents : ",(0,s.jsx)("code",{children:"Array.<FileSystemEntry>"})]}),"\n",(0,s.jsx)(r.p,{children:'The contents of this directory. This "private" property is used by FileSystem.'}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})})]}),"\n",(0,s.jsx)("a",{name:"Directory+_contentsStats"}),"\n",(0,s.jsxs)(r.h3,{id:"directory_contentsstats--arrayfilesystemstats",children:["directory._contentsStats : ",(0,s.jsx)("code",{children:"Array.<FileSystemStats>"})]}),"\n",(0,s.jsx)(r.p,{children:"The stats for the contents of this directory, such that this._contentsStats[i]\rcorresponds to this._contents[i]."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})})]}),"\n",(0,s.jsx)("a",{name:"Directory+_contentsStatsErrors"}),"\n",(0,s.jsxs)(r.h3,{id:"directory_contentsstatserrors--objectstring-string",children:["directory._contentsStatsErrors : ",(0,s.jsx)("code",{children:"Object.<string, string>"})]}),"\n",(0,s.jsx)(r.p,{children:"The stats errors for the contents of this directory."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance property of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})})]}),"\n",(0,s.jsx)("a",{name:"Directory+isEmptyAsync"}),"\n",(0,s.jsxs)(r.h3,{id:"directoryisemptyasync--promiseboolean",children:["directory.isEmptyAsync() \u21d2 ",(0,s.jsx)("code",{children:"Promise.<boolean>"})]}),"\n",(0,s.jsx)(r.p,{children:"Returns true if is a directory exists and is empty."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Promise.<boolean>"})," - True if directory is empty and it exists, else false."]}),"\n",(0,s.jsx)("a",{name:"Directory+unlinkEmptyDirectoryAsync"}),"\n",(0,s.jsxs)(r.h3,{id:"directoryunlinkemptydirectoryasync--promisevoid",children:["directory.unlinkEmptyDirectoryAsync() \u21d2 ",(0,s.jsx)("code",{children:"Promise.<void>"})]}),"\n",(0,s.jsx)(r.p,{children:"Recursively deletes all empty subdirectories within the current directory. If all subdirectories are empty,\rthe current directory itself will be deleted.\rA directory is considered empty if it doesn't contain any files in its subtree."}),"\n",(0,s.jsx)(r.p,{children:"If a subtree contains a large number of nested subdirectories and no files, the whole tree will be deleted.\rOnly branches that contain a file will be retained."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Promise.<void>"})," - A Promise that resolves when the operation is finished",(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Throws"}),":"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)("code",{children:"FileSystemError"})," If an error occurs while accessing the filesystem"]}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.strong,{children:"Example"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-js",children:"await dir.unlinkEmptyDirectoryAsync();\n"})}),"\n",(0,s.jsx)("a",{name:"Directory+getContentsAsync"}),"\n",(0,s.jsxs)(r.h3,{id:"directorygetcontentsasyncfilternothing--object",children:["directory.getContentsAsync(filterNothing) \u21d2 ",(0,s.jsx)("code",{children:"Object"})]}),"\n",(0,s.jsx)(r.p,{children:"Read the contents of a Directory, returns a promise. It filters out all files\rthat are not shown in the file tree by default, unless the filterNothing option is specified."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Object"})," - An object\rwith attributes - entries(an array of file system entries), contentStats and contentsStatsErrors(a map from\rcontent name to error if there is any)."]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"filterNothing"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"is specified, will return a true contents of dir as shown in disc,      weather it is shown in the file tree or not. Can be used for backup/restore flows."})]})})]}),"\n",(0,s.jsx)("a",{name:"Directory+getContents"}),"\n",(0,s.jsx)(r.h3,{id:"directorygetcontentscallback-filternothing",children:"directory.getContents(callback, filterNothing)"}),"\n",(0,s.jsx)(r.p,{children:"Read the contents of a Directory. It filters out all files\rthat are not shown in the file tree by default, unless the filterNothing option is specified."}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"callback"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"function"})}),(0,s.jsx)(r.td,{children:"Callback that is passed an error code or the stat-able contents          of the directory along with the stats for these entries and a          fullPath-to-FileSystemError string map of unstat-able entries          and their stat errors. If there are no stat errors then the last          parameter shall remain undefined."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"filterNothing"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"boolean"})}),(0,s.jsx)(r.td,{children:"is specified, will return a true contents of dir as shown in disc,      weather it is shown in the file tree or not. Can be used for backup/restore flows."})]})]})]}),"\n",(0,s.jsx)("a",{name:"Directory+createAsync"}),"\n",(0,s.jsxs)(r.h3,{id:"directorycreateasync--promisefilesystemstats",children:["directory.createAsync() \u21d2 ",(0,s.jsx)("code",{children:"Promise.<FileSystemStats>"})]}),"\n",(0,s.jsx)(r.p,{children:"Create a directory and returns a promise that will resolve to a stat"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})}),(0,s.jsx)(r.br,{}),"\n",(0,s.jsx)(r.strong,{children:"Returns"}),": ",(0,s.jsx)("code",{children:"Promise.<FileSystemStats>"})," - resolves to the stats of the newly created dir."]}),"\n",(0,s.jsx)("a",{name:"Directory+create"}),"\n",(0,s.jsx)(r.h3,{id:"directorycreatecallback",children:"directory.create([callback])"}),"\n",(0,s.jsx)(r.p,{children:"Create a directory"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"Kind"}),": instance method of ",(0,s.jsx)(r.a,{href:"#Directory",children:(0,s.jsx)("code",{children:"Directory"})})]}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Param"}),(0,s.jsx)(r.th,{children:"Type"}),(0,s.jsx)(r.th,{children:"Description"})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"[callback]"}),(0,s.jsx)(r.td,{children:(0,s.jsx)("code",{children:"function"})}),(0,s.jsx)(r.td,{children:"Callback resolved with a      FileSystemError string or the stat object for the created directory."})]})})]})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>o});var s=t(96540);const n={},i=s.createContext(n);function c(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);